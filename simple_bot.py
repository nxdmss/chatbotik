#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–†–û–°–¢–ï–ô–®–ò–ô –ë–û–¢ –° –ù–£–õ–Ø
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è
"""

import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, WebAppInfo

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
BOT_TOKEN = os.getenv('BOT_TOKEN', 'your_bot_token_here')

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ê–¥–º–∏–Ω ID
ADMIN_ID = 1593426947

# –ü—Ä–æ—Å—Ç–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Ç–æ–≤–∞—Ä–æ–≤ (–≤ –ø–∞–º—è—Ç–∏)
products = [
    {"id": 1, "title": "–§—É—Ç–±–æ–ª–∫–∞", "price": 1500, "description": "–ö—Ä—É—Ç–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞"},
    {"id": 2, "title": "–î–∂–∏–Ω—Å—ã", "price": 3000, "description": "–°—Ç–∏–ª—å–Ω—ã–µ –¥–∂–∏–Ω—Å—ã"},
    {"id": 3, "title": "–ö—Ä–æ—Å—Å–æ–≤–∫–∏", "price": 5000, "description": "–£–¥–æ–±–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏"}
]

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_main_keyboard():
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    keyboard = [
        [KeyboardButton(text="üõçÔ∏è –ú–∞–≥–∞–∑–∏–Ω", web_app=WebAppInfo(url="http://localhost:8000"))],
        [KeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")],
        [KeyboardButton(text="‚≠ê –û—Ç–∑—ã–≤—ã")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_admin_keyboard():
    """–ê–¥–º–∏–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    keyboard = [
        [KeyboardButton(text="üõçÔ∏è –ú–∞–≥–∞–∑–∏–Ω", web_app=WebAppInfo(url="http://localhost:8000"))],
        [KeyboardButton(text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", web_app=WebAppInfo(url="http://localhost:8000/admin"))],
        [KeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")],
        [KeyboardButton(text="‚≠ê –û—Ç–∑—ã–≤—ã")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

@dp.message(Command("start"))
async def start_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = message.from_user.id
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    if user_id == ADMIN_ID:
        # –ê–¥–º–∏–Ω
        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!\n\n"
            "–£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏.",
            reply_markup=get_admin_keyboard()
        )
    else:
        # –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω!\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_main_keyboard()
        )

@dp.message()
async def message_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = message.text
    user_id = message.from_user.id
    
    if text == "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º":
        await message.answer(
            "üìû –î–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –Ω–∞–ø–∏—à–∏—Ç–µ @admin_username\n"
            "–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –º—ã —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è!"
        )
    
    elif text == "‚≠ê –û—Ç–∑—ã–≤—ã":
        await message.answer(
            "‚≠ê –û—Ç–∑—ã–≤—ã:\n\n"
            "üí¨ –ß—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∞—à–∏–º –æ—Ç–∑—ã–≤–æ–º.\n"
            "üëÄ –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã, –Ω–∞–ø–∏—à–∏—Ç–µ '–æ—Ç–∑—ã–≤—ã'"
        )
    
    elif text.lower() == "–æ—Ç–∑—ã–≤—ã":
        await message.answer(
            "‚≠ê –û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤:\n\n"
            "üë§ –ê–Ω–Ω–∞: '–û—Ç–ª–∏—á–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω, –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞!'\n"
            "üë§ –ú–∞–∫—Å–∏–º: '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é!'\n"
            "üë§ –ï–ª–µ–Ω–∞: '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ!'"
        )
    
    elif text.lower().startswith("–æ—Ç–∑—ã–≤") or "–æ—Ç–∑—ã–≤" in text.lower():
        await message.answer(
            "‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –µ–≥–æ —É—á—Ç–µ–º."
        )
    
    elif user_id == ADMIN_ID and text == "‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å":
        await message.answer(
            "‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å' –¥–ª—è –≤—Ö–æ–¥–∞."
        )
    
    else:
        # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.answer(
            "–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú—ã –µ–≥–æ –ø–æ–ª—É—á–∏–ª–∏ –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–º."
        )

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å—Ç–µ–π—à–µ–≥–æ –±–æ—Ç–∞...")
    
    if BOT_TOKEN == 'your_bot_token_here':
        logger.error("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        logger.info("üìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
        return
    
    try:
        await dp.start_polling(bot)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
