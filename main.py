#!/usr/bin/env python3
"""
üöÄ PROFESSIONAL E-COMMERCE PLATFORM - MAIN ENTRY POINT
=======================================================
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
"""

import asyncio
import os
import signal
import sys
import threading
import time
from pathlib import Path

import uvicorn
import requests

# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è –Ω–∞—à–∏—Ö –º–æ–¥—É–ª–µ–π
from app import app
from telegram_bot import main as run_bot

class ECommercePlatform:
    def __init__(self):
        self.web_server_process = None
        self.bot_task = None
        self.running = True
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        self.web_port = int(os.getenv('PORT', 8000))
        self.web_host = os.getenv('HOST', '0.0.0.0')
        self.bot_token = os.getenv('BOT_TOKEN', '')
        self.webapp_url = os.getenv('WEBAPP_URL', f'http://localhost:{self.web_port}')
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –±–æ—Ç–∞
        os.environ['WEBAPP_URL'] = self.webapp_url
        
    def print_banner(self):
        """–ö—Ä–∞—Å–∏–≤—ã–π –±–∞–Ω–Ω–µ—Ä"""
        banner = """
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                              ‚ïë
‚ïë  üè¢ PROFESSIONAL E-COMMERCE PLATFORM                        ‚ïë
‚ïë                                                              ‚ïë
‚ïë  ‚ú® –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –∫–æ–º–º–µ—Ä—Ü–∏–∏              ‚ïë
‚ïë  ü§ñ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram –±–æ—Ç–æ–º                             ‚ïë
‚ïë  üåê –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ FastAPI                               ‚ïë
‚ïë  üíæ SQLite –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö                                       ‚ïë
‚ïë                                                              ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
        """
        print(banner)
        
    def print_status(self):
        """–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"""
        print("\nüìä –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:")
        print("=" * 50)
        print(f"üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä: http://{self.web_host}:{self.web_port}")
        print(f"üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://{self.web_host}:{self.web_port}/docs")
        print(f"ü§ñ Telegram –±–æ—Ç: {'‚úÖ –ó–∞–ø—É—â–µ–Ω' if self.bot_token else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        print(f"üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: shop.db")
        print(f"üìÅ –ó–∞–≥—Ä—É–∑–∫–∏: uploads/")
        print("=" * 50)
        
    def setup_directories(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
        directories = ['uploads', 'static', 'db_backups']
        for directory in directories:
            Path(directory).mkdir(exist_ok=True)
        print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã")
        
    def check_web_server(self, timeout=30):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"""
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä...")
        
        for i in range(timeout):
            try:
                response = requests.get(f"http://localhost:{self.web_port}/api/products", timeout=1)
                if response.status_code == 200:
                    print("‚úÖ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç")
                    return True
            except requests.exceptions.RequestException:
                pass
            
            time.sleep(1)
            if i % 5 == 0 and i > 0:
                print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞... ({i}/{timeout})")
        
        print("‚ùå –í–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
        return False
        
    def run_web_server(self):
        """–ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"""
        print("üåê –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä...")
        try:
            uvicorn.run(
                app, 
                host=self.web_host, 
                port=self.web_port,
                log_level="info",
                access_log=False
            )
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞: {e}")
            
    async def run_telegram_bot(self):
        """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
        if not self.bot_token:
            print("‚ö†Ô∏è BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω - –±–æ—Ç –Ω–µ –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω")
            print("üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN")
            return
            
        print("ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞...")
        try:
            await run_bot()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ Telegram –±–æ—Ç–∞: {e}")
            
    def signal_handler(self, signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
        print(f"\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}. –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...")
        self.running = False
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–¥–∞—á–∏
        if self.bot_task and not self.bot_task.done():
            self.bot_task.cancel()
            
        print("‚úÖ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        sys.exit(0)
        
    async def start(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"""
        self.print_banner()
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        self.setup_directories()
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
        signal.signal(signal.SIGINT, self.signal_handler)
        signal.signal(signal.SIGTERM, self.signal_handler)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        web_thread = threading.Thread(target=self.run_web_server, daemon=True)
        web_thread.start()
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
        if not self.check_web_server():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-—Å–µ—Ä–≤–µ—Ä")
            return
            
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
        self.print_status()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞
        if self.bot_token:
            self.bot_task = asyncio.create_task(self.run_telegram_bot())
            
            try:
                await self.bot_task
            except asyncio.CancelledError:
                print("ü§ñ Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print("\nüéâ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!")
            print("üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ BOT_TOKEN")
            print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
            
            # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            try:
                while self.running:
                    await asyncio.sleep(1)
            except KeyboardInterrupt:
                pass

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    platform = ECommercePlatform()
    await platform.start()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
