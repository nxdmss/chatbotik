#!/usr/bin/env python3
"""
üõçÔ∏è –û–°–ù–û–í–ù–û–ô TELEGRAM BOT - –ò–ù–¢–ï–†–ù–ï–¢-–ú–ê–ì–ê–ó–ò–ù
============================================
–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω —Å Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π
- –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
- –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫
- –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏
- –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
"""

import os
import json
import sqlite3
import base64
import uuid
from datetime import datetime
from http.server import HTTPServer, BaseHTTPRequestHandler
import threading
import time
try:
    from PIL import Image
    from io import BytesIO
    PIL_AVAILABLE = True
except ImportError:
    PIL_AVAILABLE = False
    print("‚ö†Ô∏è PIL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –±–µ–∑ —Å–∂–∞—Ç–∏—è")

try:
    import requests
    REQUESTS_AVAILABLE = True
except ImportError:
    REQUESTS_AVAILABLE = False

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN', '')
PORT = int(os.getenv('PORT', 8000))
WEBAPP_URL = f'http://localhost:{PORT}'
UPLOADS_DIR = 'uploads'

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
os.makedirs(UPLOADS_DIR, exist_ok=True)

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASE_PATH = 'shop.db'

class DarkShopBot:
    def __init__(self):
        self.token = BOT_TOKEN
        self.webapp_url = WEBAPP_URL
        self.init_database()
    
    def init_database(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        conn = sqlite3.connect(DATABASE_PATH)
        cursor = conn.cursor()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS products (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title TEXT NOT NULL,
                description TEXT DEFAULT '',
                price INTEGER NOT NULL,
                image_url TEXT DEFAULT '',
                gallery_images TEXT DEFAULT '',
                sizes TEXT DEFAULT '',
                category TEXT DEFAULT '',
                brand TEXT DEFAULT '',
                color TEXT DEFAULT '',
                material TEXT DEFAULT '',
                weight TEXT DEFAULT '',
                dimensions TEXT DEFAULT '',
                in_stock INTEGER DEFAULT 1,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç (–º–∏–≥—Ä–∞—Ü–∏—è)
        new_fields = [
            ('description', 'TEXT DEFAULT ""'),
            ('gallery_images', 'TEXT DEFAULT ""'),
            ('sizes', 'TEXT DEFAULT ""'),
            ('category', 'TEXT DEFAULT ""'),
            ('brand', 'TEXT DEFAULT ""'),
            ('color', 'TEXT DEFAULT ""'),
            ('material', 'TEXT DEFAULT ""'),
            ('weight', 'TEXT DEFAULT ""'),
            ('dimensions', 'TEXT DEFAULT ""'),
            ('in_stock', 'INTEGER DEFAULT 1')
        ]
        
        for field_name, field_type in new_fields:
            try:
                cursor.execute(f'ALTER TABLE products ADD COLUMN {field_name} {field_type}')
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ {field_name} –≤ —Ç–∞–±–ª–∏—Ü—É products")
            except sqlite3.OperationalError:
                # –ü–æ–ª–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                pass
        
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS orders (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                customer_name TEXT NOT NULL,
                customer_phone TEXT NOT NULL,
                total_amount INTEGER NOT NULL,
                status TEXT DEFAULT 'pending',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        cursor.execute('SELECT COUNT(*) FROM products')
        if cursor.fetchone()[0] == 0:
            test_products = [
                ('iPhone 15 Pro', 99999, ''),
                ('MacBook Air M3', 129999, ''),
                ('Nike Air Max', 8999, ''),
                ('–ö–æ—Ñ–µ Starbucks', 299, ''),
                ('–ö–Ω–∏–≥–∞ Python', 1999, ''),
                ('Samsung Galaxy', 89999, ''),
                ('Adidas Boost', 12999, ''),
                ('–ß–∞–π Earl Grey', 599, ''),
                ('iPad Pro', 79999, ''),
                ('Nike Dunk', 7999, ''),
                ('–ö–æ—Ñ–µ Lavazza', 399, ''),
                ('–ö–Ω–∏–≥–∞ JavaScript', 2499, '')
            ]
            
            for title, price, image_url in test_products:
                cursor.execute('''
                    INSERT INTO products (title, price, image_url)
                    VALUES (?, ?, ?)
                ''', (title, price, image_url))
            
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        
        conn.commit()
        conn.close()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    def save_image(self, base64_data):
        """–ü—Ä–æ—Å—Ç–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ base64"""
        try:
            print(f"üîç save_image –≤—ã–∑–≤–∞–Ω–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª–∏–Ω–æ–π: {len(base64_data) if base64_data else 0}")
            
            if not base64_data or base64_data.strip() == '':
                print("‚ö†Ô∏è –ü—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É")
                return ''
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ base64
            if len(base64_data) < 100:
                print(f"‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–µ –¥–∞–Ω–Ω—ã–µ: {base64_data[:50]}...")
                return ''
            
            print(f"üì∏ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –¥–ª–∏–Ω–∞: {len(base64_data)}")
            
            # –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ - —É–±–∏—Ä–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –µ—Å–ª–∏ –µ—Å—Ç—å
            if base64_data.startswith('data:'):
                # –ù–∞—Ö–æ–¥–∏–º –∑–∞–ø—è—Ç—É—é –∏ –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ base64 –¥–∞–Ω–Ω—ã–µ
                if ',' in base64_data:
                    base64_data = base64_data.split(',', 1)[1]
                    print("üì∏ –£–±—Ä–∞–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ data:")
            
            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º base64
            try:
                image_data = base64.b64decode(base64_data)
                print(f"‚úÖ Base64 –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω, —Ä–∞–∑–º–µ—Ä: {len(image_data)} –±–∞–π—Ç")
            except Exception as decode_error:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è base64: {decode_error}")
                return ''
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
            filename = f"img_{uuid.uuid4().hex[:8]}.jpg"
            filepath = os.path.join(UPLOADS_DIR, filename)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if not os.path.exists(UPLOADS_DIR):
                os.makedirs(UPLOADS_DIR)
                print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {UPLOADS_DIR}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            with open(filepath, 'wb') as f:
                f.write(image_data)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–ª—Å—è
            if os.path.exists(filepath):
                file_size = os.path.getsize(filepath)
                result_url = f"/uploads/{filename}"
                print(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {filename} ({file_size} –±–∞–π—Ç)")
                print(f"üìÅ –ü–æ–ª–Ω—ã–π –ø—É—Ç—å: {filepath}")
                print(f"üåê URL –¥–ª—è –±–∞–∑—ã: {result_url}")
                return result_url
            else:
                print(f"‚ùå –§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–ª—Å—è: {filepath}")
                return ''
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
            import traceback
            traceback.print_exc()
            return ''
    
    def send_message(self, chat_id, text, reply_markup=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
        if not self.token or not REQUESTS_AVAILABLE:
            print(f"üì± [BOT] {chat_id}: {text}")
            return
        
        url = f'https://api.telegram.org/bot{self.token}/sendMessage'
        data = {
            'chat_id': chat_id,
            'text': text,
            'parse_mode': 'Markdown'
        }
        
        if reply_markup:
            data['reply_markup'] = json.dumps(reply_markup)
        
        try:
            response = requests.post(url, data=data)
            return response.json()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    
    def handle_start(self, chat_id):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
        text = '''üõçÔ∏è **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω!**

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:
‚Ä¢ üõí –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã
‚Ä¢ üì¶ –î–æ–±–∞–≤–ª—è—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
‚Ä¢ üí≥ –û—Ñ–æ—Ä–º–ª—è—Ç—å –∑–∞–∫–∞–∑—ã
‚Ä¢ üìû –°–≤—è–∑—ã–≤–∞—Ç—å—Å—è —Å –Ω–∞–º–∏

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω!'''
        
        keyboard = {
            'inline_keyboard': [
                [{'text': 'üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω', 'web_app': {'url': self.webapp_url}}],
                [{'text': 'üì¶ –ö–∞—Ç–∞–ª–æ–≥', 'callback_data': 'catalog'}],
                [{'text': 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã', 'callback_data': 'contact'}]
            ]
        }
        
        self.send_message(chat_id, text, keyboard)
    
    def handle_webapp_data(self, chat_id, data):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç WebApp"""
        try:
            if data.get('type') == 'order':
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                conn = sqlite3.connect(DATABASE_PATH)
                cursor = conn.cursor()
                
                order_data = data.get('order', {})
                total_amount = 0
                
                # –ü—Ä–æ—Å—Ç–æ–π —Ä–∞—Å—á–µ—Ç —Å—É–º–º—ã (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å —Ü–µ–Ω—ã –∏–∑ –ë–î)
                for item in order_data.get('items', []):
                    cursor.execute('SELECT price FROM products WHERE id = ?', (item.get('product_id'),))
                    product = cursor.fetchone()
                    if product:
                        total_amount += product[0] * item.get('quantity', 1)
                
                cursor.execute('''
                    INSERT INTO orders (customer_name, customer_phone, total_amount)
                    VALUES (?, ?, ?)
                ''', (order_data.get('customer_name', ''), 
                      order_data.get('customer_phone', ''), 
                      total_amount))
                
                order_id = cursor.lastrowid
                conn.commit()
                conn.close()
                
                response_text = f'''‚úÖ **–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!**

üÜî –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: #{order_id}
üí∞ –°—É–º–º–∞: {total_amount:,} ‚ÇΩ
üìû –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!'''
                
                self.send_message(chat_id, response_text)
                
            elif data.get('type') == 'feedback':
                response_text = f'''‚úÖ **–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!**

üìù –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "{data.get('feedback', '')}"

–ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–≤–µ—Ç–∏–º!'''
                
                self.send_message(chat_id, response_text)
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö WebApp: {e}")
            self.send_message(chat_id, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö')

class DarkWebAppHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ GET –∑–∞–ø—Ä–æ—Å–æ–≤"""
        if self.path == '/':
            self.send_response(200)
            self.send_header('Content-type', 'text/html; charset=utf-8')
            self.end_headers()
            
            html_content = self.get_dark_page_v3()
            self.wfile.write(html_content.encode('utf-8'))
            
        elif self.path.startswith('/product/'):
            # –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–æ–≤–∞—Ä–∞
            product_id = self.path.split('/')[-1]
            self.send_response(200)
            self.send_header('Content-type', 'text/html; charset=utf-8')
            self.end_headers()
            
            html_content = self.get_product_page(product_id)
            self.wfile.write(html_content.encode('utf-8'))
            
        elif self.path == '/api/products':
            self.send_response(200)
            self.send_header('Content-type', 'application/json; charset=utf-8')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            
            try:
                conn = sqlite3.connect(DATABASE_PATH)
                cursor = conn.cursor()
                cursor.execute('SELECT * FROM products ORDER BY created_at DESC')
                products = cursor.fetchall()
                conn.close()
                
                products_data = []
                for product in products:
                    products_data.append({
                        'id': product[0],
                        'title': product[1],
                        'price': product[2],
                        'image_url': (product[3] if len(product) > 3 else '') or '',
                        'description': product[5] if len(product) > 5 else '',
                        'sizes': (product[7] if len(product) > 7 else '') or '',
                        'category': (product[8] if len(product) > 8 else '') or '',
                        'brand': (product[9] if len(product) > 9 else '') or '',
                        'color': (product[10] if len(product) > 10 else '') or '',
                        'material': (product[11] if len(product) > 11 else '') or '',
                        'weight': (product[12] if len(product) > 12 else '') or '',
                        'dimensions': (product[13] if len(product) > 13 else '') or '',
                        'in_stock': (product[14] if len(product) > 14 else 1),
                        'created_at': product[4] if len(product) > 4 else ''
                    })
                
                print(f"üì¶ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º {len(products_data)} —Ç–æ–≤–∞—Ä–æ–≤")
                for p in products_data:
                    print(f"  - {p['title']}: {p['price']} ‚ÇΩ")
                
                self.wfile.write(json.dumps(products_data, ensure_ascii=False).encode('utf-8'))
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤: {e}")
                self.wfile.write(json.dumps([]).encode('utf-8'))
        
        elif self.path.startswith('/api/product/'):
            # API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ
            product_id = self.path.split('/')[-1]
            
            try:
                conn = sqlite3.connect(DATABASE_PATH)
                cursor = conn.cursor()
                cursor.execute('SELECT * FROM products WHERE id = ?', (product_id,))
                product = cursor.fetchone()
                conn.close()
                
                if product:
                    # –ü–∞—Ä—Å–∏–º –≥–∞–ª–µ—Ä–µ—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (JSON —Å—Ç—Ä–æ–∫–∞)
                    gallery_images = []
                    if len(product) > 6 and product[6]:  # gallery_images
                        try:
                            gallery_images = json.loads(product[6]) if product[6] else []
                        except:
                            gallery_images = []
                    
                    product_data = {
                        'id': product[0],
                        'title': product[1],
                        'description': product[5] if len(product) > 5 else '',
                        'price': product[2],
                        'image_url': (product[3] if len(product) > 3 else '') or '',
                        'gallery_images': gallery_images,
                        'sizes': (product[7] if len(product) > 7 else '') or '',
                        'category': (product[8] if len(product) > 8 else '') or '',
                        'brand': (product[9] if len(product) > 9 else '') or '',
                        'color': (product[10] if len(product) > 10 else '') or '',
                        'material': (product[11] if len(product) > 11 else '') or '',
                        'weight': (product[12] if len(product) > 12 else '') or '',
                        'dimensions': (product[13] if len(product) > 13 else '') or '',
                        'in_stock': (product[14] if len(product) > 14 else 1),
                        'created_at': product[4] if len(product) > 4 else ''
                    }
                    
                    self.send_response(200)
                    self.send_header('Content-type', 'application/json; charset=utf-8')
                    self.send_header('Access-Control-Allow-Origin', '*')
                    self.end_headers()
                    self.wfile.write(json.dumps(product_data, ensure_ascii=False).encode('utf-8'))
                else:
                    self.send_response(404)
                    self.send_header('Content-type', 'application/json; charset=utf-8')
                    self.end_headers()
                    self.wfile.write(json.dumps({'error': 'Product not found'}).encode('utf-8'))
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ {product_id}: {e}")
                self.send_response(500)
                self.send_header('Content-type', 'application/json; charset=utf-8')
                self.end_headers()
                self.wfile.write(json.dumps({'error': 'Internal server error'}).encode('utf-8'))
        
        elif self.path == '/test-image':
            # –¢–µ—Å—Ç–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            self.send_response(200)
            self.send_header('Content-type', 'text/html; charset=utf-8')
            self.end_headers()
            
            test_html = '''
            <!DOCTYPE html>
            <html>
            <head><title>–¢–µ—Å—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</title></head>
            <body>
                <h1>–¢–µ—Å—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</h1>
                <p>–ü–∞–ø–∫–∞ uploads:</p>
                <ul>
            '''
            
            if os.path.exists(UPLOADS_DIR):
                files = os.listdir(UPLOADS_DIR)
                for file in files:
                    test_html += f'<li><a href="/uploads/{file}">{file}</a></li>'
                    test_html += f'<li><img src="/uploads/{file}" style="width:100px; height:100px; object-fit:cover; border:1px solid #ccc; margin:5px;"></li>'
            else:
                test_html += '<li>–ü–∞–ø–∫–∞ uploads –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</li>'
            
            test_html += '''
                </ul>
                <p><a href="/">–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–∞–≥–∞–∑–∏–Ω—É</a></p>
            </body>
            </html>
            '''
            
            self.wfile.write(test_html.encode('utf-8'))
        
        elif self.path.startswith('/uploads/'):
            # –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            filename = self.path[9:]  # –£–±–∏—Ä–∞–µ–º '/uploads/'
            filepath = os.path.join(UPLOADS_DIR, filename)
            
            print(f"üñºÔ∏è –ó–∞–ø—Ä–æ—Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {self.path}")
            print(f"üìÅ –ò—â–µ–º —Ñ–∞–π–ª: {filepath}")
            
            if os.path.exists(filepath):
                file_size = os.path.getsize(filepath)
                print(f"‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω, —Ä–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç")
                
                self.send_response(200)
                self.send_header('Content-type', 'image/jpeg')
                self.send_header('Access-Control-Allow-Origin', '*')
                self.send_header('Cache-Control', 'public, max-age=3600')
                self.end_headers()
                
                try:
                    with open(filepath, 'rb') as f:
                        content = f.read()
                        self.wfile.write(content)
                    print(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {filename} ({len(content)} –±–∞–π—Ç)")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
                    self.send_response(500)
                    self.end_headers()
                    self.wfile.write(b'Server Error')
            else:
                print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {filepath}")
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                if os.path.exists(UPLOADS_DIR):
                    files = os.listdir(UPLOADS_DIR)
                    print(f"üìÅ –§–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ uploads: {files}")
                else:
                    print(f"üìÅ –ü–∞–ø–∫–∞ uploads –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
                
                self.send_response(404)
                self.send_header('Content-type', 'text/plain')
                self.end_headers()
                self.wfile.write(b'Image not found')
        
        else:
            self.send_response(404)
            self.end_headers()
            self.wfile.write(b'Not Found')
    
    def do_POST(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ POST –∑–∞–ø—Ä–æ—Å–æ–≤"""
        if self.path == '/api/orders':
            content_length = int(self.headers['Content-Length'])
            post_data = self.rfile.read(content_length)
            
            try:
                data = json.loads(post_data.decode('utf-8'))
                
                self.send_response(200)
                self.send_header('Content-type', 'application/json; charset=utf-8')
                self.send_header('Access-Control-Allow-Origin', '*')
                self.end_headers()
                
                # –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞
                response = {'success': True, 'order_id': 12345}
                self.wfile.write(json.dumps(response, ensure_ascii=False).encode('utf-8'))
            
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞: {e}")
                self.send_response(500)
                self.end_headers()
                self.wfile.write(b'Internal Server Error')
        
        elif self.path == '/api/add-product':
            content_length = int(self.headers['Content-Length'])
            post_data = self.rfile.read(content_length)
            
            try:
                data = json.loads(post_data.decode('utf-8'))
                
                title = data.get('title', '')
                description = data.get('description', '')
                price = int(data.get('price', 0))
                category = data.get('category', '')
                brand = data.get('brand', '')
                color = data.get('color', '')
                material = data.get('material', '')
                weight = data.get('weight', '')
                dimensions = data.get('dimensions', '')
                sizes = data.get('sizes', '')
                image_data = data.get('image', '')
                gallery_images_data = data.get('gallery_images', [])
                
                print(f"üìù –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: title='{title}', price={price}, sizes='{sizes}', image_data_len={len(image_data)}, gallery_len={len(gallery_images_data)}")
                
                if title and price > 0:
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    bot = DarkShopBot()
                    image_url = bot.save_image(image_data)
                    print(f"üñºÔ∏è URL –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {image_url}")
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–∞–ª–µ—Ä–µ—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                    gallery_urls = []
                    for gallery_image_data in gallery_images_data:
                        if gallery_image_data:
                            gallery_url = bot.save_image(gallery_image_data)
                            if gallery_url:
                                gallery_urls.append(gallery_url)
                    
                    gallery_images_json = json.dumps(gallery_urls)
                    print(f"üñºÔ∏è –ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(gallery_urls)} —Ñ–æ—Ç–æ")
                    
                    conn = sqlite3.connect(DATABASE_PATH)
                    cursor = conn.cursor()
                    cursor.execute('''
                        INSERT INTO products (title, description, price, image_url, gallery_images, 
                                            category, brand, color, material, weight, dimensions, sizes)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                    ''', (title, description, price, image_url, gallery_images_json,
                          category, brand, color, material, weight, dimensions, sizes))
                    conn.commit()
                    conn.close()
                    
                    print(f"‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω: {title} - {price} ‚ÇΩ, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_url}, –≥–∞–ª–µ—Ä–µ—è: {len(gallery_urls)} —Ñ–æ—Ç–æ")
                    response = {'success': True, 'message': '–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!'}
                else:
                    print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: title='{title}', price={price}")
                    response = {'success': False, 'message': '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞'}
                
                self.send_response(200)
                self.send_header('Content-type', 'application/json; charset=utf-8')
                self.send_header('Access-Control-Allow-Origin', '*')
                self.end_headers()
                self.wfile.write(json.dumps(response, ensure_ascii=False).encode('utf-8'))
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: {e}")
                response = {'success': False, 'message': f'–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: {str(e)}'}
                self.send_response(500)
                self.send_header('Content-type', 'application/json; charset=utf-8')
                self.send_header('Access-Control-Allow-Origin', '*')
                self.end_headers()
                self.wfile.write(json.dumps(response, ensure_ascii=False).encode('utf-8'))
        
        elif self.path.startswith('/api/update-product/'):
            product_id = self.path.split('/')[-1]
            content_length = int(self.headers['Content-Length'])
            post_data = self.rfile.read(content_length)
            
            try:
                data = json.loads(post_data.decode('utf-8'))
                
                title = data.get('title', '')
                description = data.get('description', '')
                price = int(data.get('price', 0))
                category = data.get('category', '')
                brand = data.get('brand', '')
                color = data.get('color', '')
                material = data.get('material', '')
                weight = data.get('weight', '')
                dimensions = data.get('dimensions', '')
                sizes = data.get('sizes', '')
                image_data = data.get('image', '')
                gallery_images_data = data.get('gallery_images', [])
                
                print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ID {product_id}: title='{title}', price={price}, sizes='{sizes}', image_len={len(image_data) if image_data else 0}, gallery_len={len(gallery_images_data)}")
                
                if title and price > 0:
                    conn = sqlite3.connect(DATABASE_PATH)
                    cursor = conn.cursor()
                    
                    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
                    cursor.execute('SELECT image_url, gallery_images FROM products WHERE id = ?', (product_id,))
                    current_product = cursor.fetchone()
                    current_image_url = current_product[0] if current_product else ''
                    current_gallery_images = current_product[1] if current_product else '[]'
                    
                    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤–æ–µ –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
                    if image_data and image_data.strip():
                        bot = DarkShopBot()
                        image_url = bot.save_image(image_data)
                        print(f"üñºÔ∏è –ù–æ–≤–æ–µ –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {image_url}")
                    else:
                        image_url = current_image_url
                        print("üìù –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–æ")
                    
                    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤–∞—è –≥–∞–ª–µ—Ä–µ—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ—ë
                    if gallery_images_data:
                        bot = DarkShopBot()
                        gallery_urls = []
                        for gallery_image_data in gallery_images_data:
                            if gallery_image_data:
                                gallery_url = bot.save_image(gallery_image_data)
                                if gallery_url:
                                    gallery_urls.append(gallery_url)
                        gallery_images_json = json.dumps(gallery_urls)
                        print(f"üñºÔ∏è –ù–æ–≤–∞—è –≥–∞–ª–µ—Ä–µ—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {len(gallery_urls)} —Ñ–æ—Ç–æ")
                    else:
                        gallery_images_json = current_gallery_images
                        print("üìù –ì–∞–ª–µ—Ä–µ—è –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∞")
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä
                    cursor.execute('''
                        UPDATE products 
                        SET title = ?, description = ?, price = ?, image_url = ?, gallery_images = ?,
                            category = ?, brand = ?, color = ?, material = ?, weight = ?, dimensions = ?, sizes = ?
                        WHERE id = ?
                    ''', (title, description, price, image_url, gallery_images_json,
                          category, brand, color, material, weight, dimensions, sizes, product_id))
                    
                    rows_affected = cursor.rowcount
                    conn.commit()
                    conn.close()
                    
                    print(f"üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: {rows_affected}")
                    print(f"‚úÖ –¢–æ–≤–∞—Ä –æ–±–Ω–æ–≤–ª–µ–Ω: {title}")
                    
                    response = {'success': True, 'message': '–¢–æ–≤–∞—Ä –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!'}
                else:
                    print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: title='{title}', price={price}")
                    response = {'success': False, 'message': '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞'}
                
                self.send_response(200)
                self.send_header('Content-type', 'application/json; charset=utf-8')
                self.send_header('Access-Control-Allow-Origin', '*')
                self.end_headers()
                self.wfile.write(json.dumps(response, ensure_ascii=False).encode('utf-8'))
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: {e}")
                import traceback
                traceback.print_exc()
                response = {'success': False, 'message': '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞'}
                self.send_response(500)
                self.send_header('Content-type', 'application/json; charset=utf-8')
                self.send_header('Access-Control-Allow-Origin', '*')
                self.end_headers()
                self.wfile.write(json.dumps(response, ensure_ascii=False).encode('utf-8'))
        
        elif self.path.startswith('/api/delete-product/'):
            product_id = self.path.split('/')[-1]
            
            try:
                conn = sqlite3.connect(DATABASE_PATH)
                cursor = conn.cursor()
                cursor.execute('DELETE FROM products WHERE id = ?', (product_id,))
                conn.commit()
                conn.close()
                
                response = {'success': True, 'message': '–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!'}
                
                self.send_response(200)
                self.send_header('Content-type', 'application/json; charset=utf-8')
                self.send_header('Access-Control-Allow-Origin', '*')
                self.end_headers()
                self.wfile.write(json.dumps(response, ensure_ascii=False).encode('utf-8'))
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: {e}")
                response = {'success': False, 'message': '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞'}
                self.send_response(500)
                self.send_header('Content-type', 'application/json; charset=utf-8')
                self.send_header('Access-Control-Allow-Origin', '*')
                self.end_headers()
                self.wfile.write(json.dumps(response, ensure_ascii=False).encode('utf-8'))
        
        else:
            self.send_response(404)
            self.end_headers()
            self.wfile.write(b'Not Found')
    
    def get_dark_page_v3(self):
        """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ WebApp —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
        return '''<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LOOK & GO - Telegram Mini App</title>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
        * { 
            margin: 0; 
            padding: 0; 
            box-sizing: border-box; 
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #1a1a1a;
            color: #ffffff;
            padding: 16px;
            min-height: 100vh;
            padding-bottom: 100px;
        }
        
        .header {
            text-align: center;
            margin-bottom: 24px;
            padding: 20px;
            background: #2d2d2d;
            border-radius: 12px;
            border: 1px solid #333;
        }
        
        .header h1 {
            font-size: 24px;
            margin-bottom: 8px;
            color: #ffffff;
        }
        
        .header p {
            color: #cccccc;
            font-size: 14px;
        }
        
        .search-box {
            position: relative;
            margin-bottom: 16px;
        }
        
        .search-box input {
            width: 100%;
            background: #2d2d2d;
            border: 1px solid #333;
            border-radius: 8px;
            padding: 12px 16px 12px 40px;
            color: #ffffff;
            font-size: 16px;
        }
        
        .search-box input:focus {
            outline: none;
            border-color: #1e40af;
        }
        
        .search-box::before {
            content: 'üîç';
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 16px;
        }
        
        .products-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
            margin-bottom: 24px;
            padding: 0 16px;
            justify-items: center;
        }
        
        .product-card {
            background: transparent;
            border: none;
            border-radius: 12px;
            transition: all 0.3s ease;
            position: relative;
            aspect-ratio: 0.85;
            min-height: 220px;
            overflow: hidden;
            margin: 8px;
            padding: 4px;
            box-sizing: border-box;
        }
        
        .product-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        }
        
        .product-image-full {
            width: 100%;
            height: 100%;
            position: relative;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }
        
        .product-image-full img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
            display: block;
            transition: transform 0.3s ease;
        }
        
        .product-overlay {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: linear-gradient(transparent, rgba(0, 0, 0, 0.8));
            padding: 16px 12px 12px;
            color: white;
            border-radius: 0 0 12px 12px;
        }
        
        .product-info {
            margin-bottom: 8px;
        }
        
        .product-overlay .product-title {
            font-size: 12px;
            font-weight: 600;
            margin: 0 0 4px 0;
            color: #ffffff;
            line-height: 1.2;
            text-shadow: 0 1px 3px rgba(0, 0, 0, 0.8);
        }
        
        .product-overlay .product-price {
            font-size: 14px;
            font-weight: 700;
            margin: 0;
            color: #ffffff;
            text-shadow: 0 1px 3px rgba(0, 0, 0, 0.8);
        }
        
        .product-image-full img:hover {
            transform: scale(1.05);
        }
        
        
        .product-description {
            color: #aaaaaa;
            font-size: 11px;
            margin-bottom: 8px;
            line-height: 1.2;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        
        
        .add-to-cart-btn {
            background: #1e40af;
            color: #ffffff;
            border: none;
            padding: 8px 12px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 12px;
            font-weight: 600;
            width: 100%;
            transition: all 0.3s ease;
        }
        
        .add-to-cart-btn:hover {
            background: #1d4ed8;
            transform: scale(1.02);
        }
        
        .product-overlay .product-buttons {
            display: flex;
            flex-direction: column;
            gap: 6px;
            margin-bottom: 8px;
        }
        
        .size-btn-thin, .add-to-cart-btn-thin {
            background: rgba(0, 0, 0, 0.7);
            color: #ffffff;
            border: 1px solid rgba(255, 255, 255, 0.3);
            padding: 6px 10px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 10px;
            font-weight: 500;
            transition: all 0.3s ease;
            width: 100%;
            height: 28px;
            display: flex;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(4px);
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.8);
        }
        
        .size-btn-thin {
            background: rgba(45, 45, 45, 0.8);
            border-color: rgba(255, 255, 255, 0.4);
        }
        
        .size-btn-thin:hover {
            background: rgba(61, 61, 61, 0.9);
            border-color: #007bff;
            transform: translateY(-1px);
        }
        
        .size-btn-thin.required {
            background: rgba(0, 86, 179, 0.9);
            border-color: #0056b3;
            color: #ffffff;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }
        
        .add-to-cart-btn-thin {
            background: rgba(0, 123, 255, 0.9);
            border-color: #007bff;
        }
        
        .add-to-cart-btn-thin:hover {
            background: rgba(0, 86, 179, 0.95);
            transform: translateY(-1px);
        }
        
        .cart-section {
            background: #2d2d2d;
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 20px;
            border: 1px solid #333;
        }
        
        .cart-section h2 {
            color: #3b82f6;
            margin-bottom: 16px;
            font-size: 18px;
        }
        
        .checkout-btn {
            background: #1e40af;
            color: white;
            border: none;
            padding: 14px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            width: 100%;
            margin-top: 16px;
            transition: all 0.3s ease;
        }
        
        .checkout-btn:hover:not(.hidden) {
            background: #1d4ed8;
            transform: scale(1.02);
        }
        
        .loading {
            text-align: center;
            padding: 40px;
            color: #aaaaaa;
            font-size: 16px;
        }
        
        .hidden { 
            display: none; 
        }
        
        .admin-section {
            background: #2d2d2d;
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 20px;
            border: 1px solid #333;
        }
        
        .admin-section h2 {
            color: #3b82f6;
            margin-bottom: 16px;
            font-size: 18px;
        }
        
        .admin-form {
            display: grid;
            gap: 12px;
        }
        
        .form-group {
            display: flex;
            flex-direction: column;
            gap: 6px;
        }
        
        .form-group label {
            color: #3b82f6;
            font-weight: 600;
            font-size: 14px;
        }
        
        .form-group input,
        .form-group select,
        .form-group textarea {
            background: #1a1a1a;
            border: 1px solid #333;
            border-radius: 6px;
            padding: 10px;
            color: #ffffff;
            font-size: 14px;
        }
        
        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #1e40af;
        }
        
        .file-input-wrapper {
            position: relative;
            display: inline-block;
            width: 100%;
        }
        
        .file-input {
            position: absolute;
            opacity: 0;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }
        
        .file-input-button {
            background: #1e40af;
            color: white;
            border: none;
            padding: 10px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            width: 100%;
            transition: all 0.3s ease;
        }
        
        .file-input-button:hover {
            background: #1d4ed8;
        }
        
        .image-preview {
            width: 100%;
            height: 120px;
            background: #1a1a1a;
            border-radius: 6px;
            margin-top: 8px;
            overflow: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #666;
            font-size: 18px;
        }
        
        .image-preview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .add-product-btn {
            background: #1e40af;
            color: white;
            border: none;
            padding: 12px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .add-product-btn:hover {
            background: #1d4ed8;
            transform: scale(1.02);
        }
        
        .success-message {
            background: #1e40af;
            color: white;
            padding: 12px;
            border-radius: 6px;
            margin-bottom: 16px;
            text-align: center;
            font-weight: 600;
        }
        
        .error-message {
            background: #dc2626;
            color: white;
            padding: 12px;
            border-radius: 6px;
            margin-bottom: 16px;
            text-align: center;
            font-weight: 600;
        }
        
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px;
            background: #1a1a1a;
            border-radius: 6px;
            margin-bottom: 8px;
            border: 1px solid #333;
        }
        
        .cart-item-info {
            flex: 1;
        }
        
        .cart-item-title {
            color: #ffffff;
            font-weight: 600;
            margin-bottom: 4px;
            font-size: 14px;
        }
        
        .cart-item-price {
            color: #3b82f6;
            font-weight: 600;
            font-size: 14px;
        }
        
        .quantity-controls {
            display: flex;
            align-items: center;
            gap: 6px;
        }
        
        .quantity-btn {
            background: #333;
            color: #ffffff;
            border: none;
            width: 28px;
            height: 28px;
            border-radius: 4px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            font-size: 12px;
        }
        
        .quantity-btn:hover {
            background: #1e40af;
        }
        
        .quantity-input {
            background: #1a1a1a;
            border: 1px solid #333;
            border-radius: 4px;
            padding: 4px;
            color: #ffffff;
            width: 40px;
            text-align: center;
            font-size: 12px;
        }
        
        .remove-btn {
            background: #dc2626;
            color: white;
            border: none;
            padding: 4px 8px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 10px;
            margin-left: 6px;
            transition: all 0.3s ease;
        }
        
        .remove-btn:hover {
            background: #b91c1c;
        }
        
        /* –ù–∏–∂–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */
        .bottom-nav {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background: #2d2d2d;
            border-top: 1px solid #333;
            padding: 8px 16px;
            display: flex;
            justify-content: space-around;
            z-index: 1000;
        }
        
        .nav-btn {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 4px;
            background: transparent;
            border: none;
            color: #aaaaaa;
            cursor: pointer;
            padding: 8px 12px;
            border-radius: 8px;
            transition: all 0.3s ease;
            min-width: 60px;
        }
        
        .nav-btn.active {
            color: #3b82f6;
            background: rgba(30, 64, 175, 0.1);
        }
        
        .nav-btn i {
            font-size: 18px;
        }
        
        .nav-btn span {
            font-size: 10px;
            font-weight: 600;
        }
        
        .tab-content {
            display: none;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .cart-count {
            position: absolute;
            top: -2px;
            right: -2px;
            background: #dc2626;
            color: white;
            font-size: 10px;
            padding: 2px 6px;
            border-radius: 10px;
            min-width: 18px;
            text-align: center;
            font-weight: 600;
        }
        
        /* –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å - —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */
        .admin-products-list {
            margin-bottom: 20px;
        }
        
        .admin-products-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 12px;
            margin-bottom: 20px;
            padding: 0 12px;
            justify-items: center;
        }
        
        /* –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ */
        .admin-products-grid .product-card {
            margin: 0;
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
        }
        
        .admin-products-grid .product-image-full {
            box-sizing: border-box;
        }
        
        /* –ú–æ–±–∏–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ */
        @media (max-width: 480px) {
            .admin-products-grid {
                gap: 16px;
                padding: 0 16px;
                margin-bottom: 20px;
            }
            
            .admin-products-grid .product-card {
                padding: 8px;
                margin: 6px;
                border-radius: 12px;
                box-shadow: 0 2px 8px rgba(0,0,0,0.15);
            }
            
            .admin-products-grid .product-image-full {
                border-radius: 8px;
                overflow: hidden;
                margin-bottom: 4px;
            }
            
            .admin-products-grid .product-image-full img {
                border-radius: 8px;
            }
            
            .product-overlay {
                padding: 12px 8px 8px;
                border-radius: 8px;
            }
            
            .product-overlay .product-title {
                font-size: 10px;
                margin-bottom: 2px;
                line-height: 1.1;
            }
            
            .product-overlay .product-price {
                font-size: 11px;
                margin-bottom: 3px;
            }
            
            .product-buttons {
                gap: 4px;
                margin-bottom: 2px;
            }
            
            .product-buttons button {
                padding: 6px 8px !important;
                font-size: 9px !important;
                margin-bottom: 3px !important;
                min-height: 30px !important;
                border-radius: 6px;
            }
        }
        
        .admin-search-box {
            margin-bottom: 20px;
        }
        
        .admin-search-box input {
            width: 100%;
            background: #1a1a1a;
            border: 1px solid #333;
            color: #fff;
            padding: 12px;
            border-radius: 8px;
            font-size: 16px;
        }
        
        .admin-search-box input:focus {
            outline: none;
            border-color: #1e40af;
        }
        
        .admin-products-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 16px;
            margin-bottom: 24px;
            padding: 0 8px;
            justify-items: center;
        }
        
        .admin-product-item {
            background: transparent;
            border: none;
            border-radius: 12px;
            padding: 0;
            transition: all 0.3s ease;
            position: relative;
            aspect-ratio: 1;
            overflow: hidden;
        }
        
        .admin-product-image {
            width: 100%;
            height: 100%;
            background: #2d2d2d;
            border-radius: 12px;
            overflow: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #666;
            font-size: 24px;
            position: relative;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }
        
        .admin-product-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 12px;
            display: block;
            position: absolute;
            top: 0;
            left: 0;
        }
        
        .admin-product-info {
            padding: 8px 0;
            text-align: center;
        }
        
        .admin-product-title {
            color: #ffffff;
            font-weight: 600;
            margin-bottom: 4px;
            font-size: 14px;
            line-height: 1.3;
        }
        
        .admin-product-price {
            color: #10b981;
            font-weight: 700;
            font-size: 16px;
            margin-bottom: 8px;
        }
        
        .admin-product-actions {
            display: flex;
            gap: 8px;
            justify-content: center;
        }
        
        .admin-product-actions {
            display: flex;
            gap: 8px;
        }
        
        .edit-btn {
            background: #1e40af;
            color: white;
            border: none;
            padding: 6px 12px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 12px;
            transition: all 0.3s ease;
        }
        
        .edit-btn:hover {
            background: #1d4ed8;
        }
        
        .delete-btn {
            background: #dc2626;
            color: white;
            border: none;
            padding: 6px 12px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 12px;
            transition: all 0.3s ease;
        }
        
        .delete-btn:hover {
            background: #b91c1c;
        }
        
        @media (max-width: 768px) {
            .products-grid {
                grid-template-columns: 1fr 1fr;
                gap: 12px;
                padding: 0 12px;
            }
            
            .product-card {
                padding: 6px;
                margin: 4px;
                min-height: 200px;
            }
            
            .product-title {
                font-size: 12px;
            }
            
            .product-description {
                font-size: 10px;
            }
            
            .product-price {
                font-size: 14px;
            }
            
            .add-to-cart-btn {
                padding: 6px 8px;
                font-size: 10px;
            }
        }
        
        /* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(4px);
        }
        
        .modal-content {
            background: #2d2d2d;
            margin: 10% auto;
            padding: 0;
            border: 1px solid #333;
            border-radius: 12px;
            width: 90%;
            max-width: 400px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 16px 20px;
            border-bottom: 1px solid #333;
            background: #1a1a1a;
            border-radius: 12px 12px 0 0;
        }
        
        .modal-header h3 {
            margin: 0;
            color: #ffffff;
            font-size: 18px;
        }
        
        .close {
            color: #aaaaaa;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
            line-height: 1;
        }
        
        .close:hover {
            color: #ffffff;
        }
        
        .modal-body {
            padding: 20px;
        }
        
        .modal-body p {
            margin-bottom: 16px;
            color: #cccccc;
        }
        
        .modal-body strong {
            color: #ffffff;
        }
        
        .size-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));
            gap: 8px;
            margin-top: 16px;
        }
        
        .size-btn {
            background: #1a1a1a;
            border: 2px solid #333;
            border-radius: 8px;
            color: #ffffff;
            padding: 12px 8px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            min-height: 44px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .size-btn:hover {
            background: #3d3d3d;
            border-color: #007bff;
            transform: translateY(-2px);
        }
        
        .size-btn:active {
            transform: translateY(0);
            background: #007bff;
            border-color: #007bff;
        }
        
        @media (max-width: 480px) {
            .modal-content {
                width: 95%;
                margin: 5% auto;
            }
            
            .size-grid {
                grid-template-columns: repeat(auto-fill, minmax(45px, 1fr));
                gap: 6px;
            }
            
            .size-btn {
                padding: 10px 6px;
                font-size: 12px;
                min-height: 40px;
            }
        }
        
        /* –®—Ç–æ—Ä–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ */
        .size-drawer {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background: #2d2d2d;
            border-top: 1px solid #333;
            border-radius: 16px 16px 0 0;
            transform: translateY(100%);
            transition: transform 0.3s ease;
            z-index: 1000;
            max-height: 70vh;
            overflow-y: auto;
        }
        
        .size-drawer.open {
            transform: translateY(0);
        }
        
        .drawer-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 16px 20px;
            border-bottom: 1px solid #333;
            background: #1a1a1a;
            border-radius: 16px 16px 0 0;
        }
        
        .drawer-header h3 {
            margin: 0;
            color: #ffffff;
            font-size: 18px;
        }
        
        .drawer-close {
            color: #aaaaaa;
            font-size: 24px;
            font-weight: bold;
            cursor: pointer;
            line-height: 1;
            padding: 4px;
        }
        
        .drawer-close:hover {
            color: #ffffff;
        }
        
        .drawer-content {
            padding: 20px;
        }
        
        .drawer-product-info {
            margin-bottom: 20px;
            text-align: center;
        }
        
        .drawer-product-info h4 {
            color: #ffffff;
            margin: 0 0 8px 0;
            font-size: 16px;
        }
        
        .drawer-product-info p {
            color: #cccccc;
            margin: 0;
            font-size: 14px;
        }
        
        .drawer-size-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));
            gap: 12px;
            margin-bottom: 20px;
        }
        
        .drawer-size-btn {
            background: #1a1a1a;
            border: 2px solid #333;
            border-radius: 8px;
            color: #ffffff;
            padding: 12px 8px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            min-height: 48px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .drawer-size-btn:hover {
            background: #3d3d3d;
            border-color: #007bff;
        }
        
        .drawer-size-btn.selected {
            background: #007bff;
            border-color: #007bff;
        }
        
        .drawer-size-btn.out-of-stock {
            background: #333;
            border-color: #555;
            color: #888;
            cursor: not-allowed;
        }
        
        .drawer-actions {
            display: flex;
            gap: 12px;
            padding-top: 16px;
            border-top: 1px solid #333;
        }
        
        .drawer-btn {
            flex: 1;
            padding: 12px;
            border-radius: 8px;
            border: none;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .drawer-btn-cancel {
            background: #333;
            color: #ffffff;
            border: 1px solid #555;
        }
        
        .drawer-btn-cancel:hover {
            background: #444;
        }
        
        .drawer-btn-add {
            background: #007bff;
            color: #ffffff;
            border: 1px solid #007bff;
        }
        
        .drawer-btn-add:hover {
            background: #0056b3;
        }
        
        .drawer-btn-add:disabled {
            background: #333;
            border-color: #555;
            color: #888;
            cursor: not-allowed;
        }
        
        @media (max-width: 480px) {
            .drawer-size-grid {
                grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));
                gap: 8px;
            }
            
            .drawer-size-btn {
                min-height: 44px;
                font-size: 12px;
            }
        }
    </style>
</head>
<body>
        <div class="header">
            <h1>LOOK & GO</h1>
        </div>
    
    <div id="catalog" class="tab-content active">
        <div class="search-box">
            <input type="text" id="searchInput" placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤..." onkeyup="filterProducts()">
        </div>
        
        <div id="productsContainer" class="loading">
            <div>–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...</div>
        </div>
    </div>
    
    <div id="cart" class="tab-content">
        <div class="cart-section">
            <h2>üõí –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫</h2>
            <div id="cartItems">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</div>
            <div id="cartTotal" style="font-size: 16px; font-weight: 600; color: #3b82f6; margin-top: 16px;">–ò—Ç–æ–≥–æ: 0 ‚ÇΩ</div>
            <button id="checkoutBtn" class="checkout-btn hidden">üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</button>
        </div>
    </div>
    
    <div id="admin" class="tab-content">
        <div class="admin-section">
            <h2>‚öôÔ∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h2>
            <div id="adminMessage"></div>
            
            <!-- –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ -->
            <div class="admin-search-box">
                <input type="text" id="adminSearchInput" placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤..." onkeyup="filterAdminProducts()">
            </div>
            
            <!-- –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ -->
            <div class="admin-products-grid" id="adminProductsList">
                <div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...</div>
            </div>
            
            <!-- –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è -->
            <form class="admin-form" id="adminForm">
                <div class="form-group">
                    <label for="productTitle">–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</label>
                    <input type="text" id="productTitle" required>
                </div>
                <div class="form-group">
                    <label for="productDescription">–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</label>
                    <textarea id="productDescription" rows="3" placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞..."></textarea>
                </div>
                <div class="form-group">
                    <label for="productPrice">–¶–µ–Ω–∞ (‚ÇΩ)</label>
                    <input type="number" id="productPrice" min="1" required>
                </div>
                <div class="form-group">
                    <label for="productCategory">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                    <input type="text" id="productCategory" placeholder="–û–¥–µ–∂–¥–∞, –û–±—É–≤—å, –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã...">
                </div>
                <div class="form-group">
                    <label for="productBrand">–ë—Ä–µ–Ω–¥</label>
                    <input type="text" id="productBrand" placeholder="Nike, Adidas, Apple...">
                </div>
                <div class="form-group">
                    <label for="productColor">–¶–≤–µ—Ç</label>
                    <input type="text" id="productColor" placeholder="–ß–µ—Ä–Ω—ã–π, –ë–µ–ª—ã–π, –ö—Ä–∞—Å–Ω—ã–π...">
                </div>
                <div class="form-group">
                    <label for="productMaterial">–ú–∞—Ç–µ—Ä–∏–∞–ª</label>
                    <input type="text" id="productMaterial" placeholder="–•–ª–æ–ø–æ–∫, –ö–æ–∂–∞, –ü–æ–ª–∏—ç—Å—Ç–µ—Ä...">
                </div>
                <div class="form-group">
                    <label for="productWeight">–í–µ—Å</label>
                    <input type="text" id="productWeight" placeholder="500–≥, 1–∫–≥...">
                </div>
                <div class="form-group">
                    <label for="productDimensions">–†–∞–∑–º–µ—Ä—ã</label>
                    <input type="text" id="productDimensions" placeholder="30x20x10 —Å–º...">
                </div>
                <div class="form-group">
                    <label for="productSizes">–†–∞–∑–º–µ—Ä–Ω–∞—è —Å–µ—Ç–∫–∞ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)</label>
                    <input type="text" id="productSizes" placeholder="36,37,38,39,40,41,42,43,44,45,46">
                    <small style="color: #666; font-size: 12px;">–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ —Ä–∞–∑–º–µ—Ä–∞</small>
                </div>
                <div class="form-group">
                    <label for="productImage">–û—Å–Ω–æ–≤–Ω–æ–µ —Ñ–æ—Ç–æ</label>
                    <div class="file-input-wrapper">
                        <input type="file" id="productImage" class="file-input" accept="image/*" onchange="handleImageUpload(this)">
                        <button type="button" class="file-input-button">üì∑ –í—ã–±—Ä–∞—Ç—å —Ñ–æ—Ç–æ</button>
                    </div>
                    <div class="image-preview" id="imagePreview">–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</div>
                </div>
                <div class="form-group">
                    <label for="productGallery">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ (–≥–∞–ª–µ—Ä–µ—è)</label>
                    <div class="file-input-wrapper">
                        <input type="file" id="productGallery" class="file-input" accept="image/*" multiple onchange="handleGalleryUpload(this)">
                        <button type="button" class="file-input-button">üì∑ –í—ã–±—Ä–∞—Ç—å —Ñ–æ—Ç–æ –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏</button>
                    </div>
                    <div class="gallery-preview" id="galleryPreview" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(80px, 1fr)); gap: 8px; margin-top: 8px;"></div>
                </div>
                <button type="submit" class="add-product-btn" id="submitBtn">‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</button>
            </form>
        </div>
    </div>

    <!-- –ù–∏–∂–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è -->
    <div class="bottom-nav">
        <button class="nav-btn active" onclick="showTab('catalog')">
            <span>üì¶</span>
            <span>–ö–∞—Ç–∞–ª–æ–≥</span>
        </button>
        <button class="nav-btn" onclick="showTab('cart')">
            <span>üõí</span>
            <span>–ö–æ—Ä–∑–∏–Ω–∞</span>
            <span class="cart-count" id="cartCount">0</span>
        </button>
        <button class="nav-btn" onclick="showTab('admin')">
            <span>‚öôÔ∏è</span>
            <span>–ê–¥–º–∏–Ω</span>
        </button>
    </div>

    <script>
        const tg = window.Telegram.WebApp;
        tg.ready();
        tg.expand();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ Telegram WebApp
        const isTelegramWebApp = typeof window.Telegram !== 'undefined' && window.Telegram.WebApp;
        console.log('üì± Telegram WebApp:', isTelegramWebApp ? '–î–ê' : '–ù–ï–¢');
        
        if (isTelegramWebApp) {
            console.log('ü§ñ Telegram WebApp –¥–∞–Ω–Ω—ã–µ:', {
                platform: tg.platform,
                version: tg.version,
                colorScheme: tg.colorScheme,
                isExpanded: tg.isExpanded
            });
        }
        
        let products = [];
        let cart = [];
        let currentEditingProduct = null;
        let selectedImageData = '';
        let selectedGalleryImages = [];
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
        async function loadProducts() {
            try {
                const response = await fetch('/api/products');
                products = await response.json();
                renderProducts();
                if (document.getElementById('adminProductsList')) {
                    console.log('üõ†Ô∏è –†–µ–Ω–¥–µ—Ä–∏–º –∞–¥–º–∏–Ω —Ç–æ–≤–∞—Ä—ã, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:', products.length);
                    renderAdminProducts();
                    console.log('‚úÖ –ê–¥–º–∏–Ω —Ç–æ–≤–∞—Ä—ã –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω—ã');
                }
            } catch (error) {
                document.getElementById('productsContainer').innerHTML = 
                    '<div class="loading">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤</div>';
                console.error('Error loading products:', error);
            }
        }
        
        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
        function renderProducts() {
            const container = document.getElementById('productsContainer');
            container.className = 'products-grid';
            
            if (products.length === 0) {
                container.innerHTML = '<div class="loading">–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
                return;
            }
            
            console.log('üõçÔ∏è –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤:', products.length);
            products.forEach(product => {
                console.log(`üì¶ –¢–æ–≤–∞—Ä: ${product.title}, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${product.image_url || '–Ω–µ—Ç'}`);
                if (product.image_url && product.image_url.startsWith('/uploads/')) {
                    console.log(`üñºÔ∏è –ü–æ–ª–Ω—ã–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${window.location.origin}${product.image_url}`);
                }
            });
            
            container.innerHTML = products.map(product => `
                <div class="product-card" onclick="openProductPage(${product.id})">
                    <div class="product-image-full">
                        ${product.image_url ? 
                            `<img src="${window.location.origin}${product.image_url}" alt="${product.title}" 
                                 style="width: 100%; height: 100%; object-fit: cover;"
                                 onload="console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ Telegram WebApp:', this.src)"
                                 onerror="console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Telegram WebApp:', this.src); this.style.display='none'; this.nextElementSibling.style.display='flex';">
                             <div style="display:none; color: #666; font-size: 24px; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center;">üì∑</div>` : 
                            '<div style="color: #666; font-size: 24px; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center;">üì∑</div>'
                        }
                        <div class="product-overlay">
                            <div class="product-info">
                                <div class="product-title">${product.title}</div>
                                <div class="product-price">${product.price.toLocaleString()} ‚ÇΩ</div>
                                ${product.description ? `<div class="product-description">${product.description.substring(0, 60)}${product.description.length > 60 ? '...' : ''}</div>` : ''}
                            </div>
                            <div class="product-buttons">
                                <div style="display: flex; gap: 6px; margin-top: 4px;">
                                    <button class="view-product-btn" onclick="event.stopPropagation(); openProductPage(${product.id})" style="background: rgba(0, 0, 0, 0.7); color: #ffffff; border: 1px solid rgba(255, 255, 255, 0.3); padding: 6px 10px; border-radius: 6px; cursor: pointer; font-size: 10px; font-weight: 500; transition: all 0.3s ease; height: 28px; display: flex; align-items: center; justify-content: center; backdrop-filter: blur(4px); text-shadow: 0 1px 2px rgba(0, 0, 0, 0.8); flex: 1;">
                                        üëÅ –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `).join('');
        }
        
        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ - –ü–†–û–°–¢–ê–Ø –í–ï–†–°–ò–Ø
        function renderAdminProducts(productsToRender = products) {
            const container = document.getElementById('adminProductsList');
            
            if (productsToRender.length === 0) {
                container.innerHTML = '<div class="loading">–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
                return;
            }
            
            container.innerHTML = productsToRender.map(product => `
                <div class="product-card">
                    <div class="product-image-full">
                        ${product.image_url ? 
                            `<img src="${window.location.origin}${product.image_url}" alt="${product.title}" 
                                 style="width: 100%; height: 100%; object-fit: cover;"
                                 onload="console.log('‚úÖ –ê–¥–º–∏–Ω –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', this.src)"
                                 onerror="console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–¥–º–∏–Ω –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', this.src); this.style.display='none'; this.nextElementSibling.style.display='flex';">
                             <div style="display:none; color: #666; font-size: 32px; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center;">üì∑</div>` : 
                            '<div style="color: #666; font-size: 32px; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center;">üì∑</div>'
                        }
                        <div class="product-overlay">
                            <div class="product-info">
                                <div class="product-title">${product.title}</div>
                                <div class="product-price">${product.price.toLocaleString()} ‚ÇΩ</div>
                                ${product.sizes ? `<div style="color: #ccc; font-size: 10px; margin-top: 2px;">–†–∞–∑–º–µ—Ä—ã: ${product.sizes}</div>` : ''}
                            </div>
                            <div class="product-buttons">
                                <button onclick="simpleEditProduct(${product.id})" style="background: #2196F3; color: white; border: none; padding: 8px 12px; border-radius: 4px; cursor: pointer; font-size: 11px; font-weight: bold; width: 100%; margin-bottom: 6px; min-height: 36px;">‚úè –ò–∑–º–µ–Ω–∏—Ç—å</button>
                                <button onclick="simpleDeleteProduct(${product.id})" style="background: #f44336; color: white; border: none; padding: 8px 12px; border-radius: 4px; cursor: pointer; font-size: 11px; font-weight: bold; width: 100%; min-height: 36px;">üóë –£–¥–∞–ª–∏—Ç—å</button>
                            </div>
                        </div>
                    </div>
                </div>
            `).join('');
        }
        
        // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
        function filterProducts() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const filteredProducts = products.filter(product => 
                product.title.toLowerCase().includes(searchTerm) ||
                (product.description && product.description.toLowerCase().includes(searchTerm))
            );
            
            const container = document.getElementById('productsContainer');
            if (filteredProducts.length === 0) {
                container.innerHTML = '<div class="loading">–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
                return;
            }
            
            container.innerHTML = filteredProducts.map(product => `
                <div class="product-card" onclick="openProductPage(${product.id})">
                    <div class="product-image-full">
                        ${product.image_url ? 
                            `<img src="${window.location.origin}${product.image_url}" alt="${product.title}" 
                                 style="width: 100%; height: 100%; object-fit: cover;"
                                 onload="console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ Telegram WebApp:', this.src)"
                                 onerror="console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Telegram WebApp:', this.src); this.style.display='none'; this.nextElementSibling.style.display='flex';">
                             <div style="display:none; color: #666; font-size: 24px; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center;">üì∑</div>` : 
                            '<div style="color: #666; font-size: 24px; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center;">üì∑</div>'
                        }
                        <div class="product-overlay">
                            <div class="product-info">
                                <div class="product-title">${product.title}</div>
                                <div class="product-price">${product.price.toLocaleString()} ‚ÇΩ</div>
                                ${product.description ? `<div class="product-description">${product.description.substring(0, 60)}${product.description.length > 60 ? '...' : ''}</div>` : ''}
                            </div>
                            <div class="product-buttons">
                                <div style="display: flex; gap: 6px; margin-top: 4px;">
                                    <button class="view-product-btn" onclick="event.stopPropagation(); openProductPage(${product.id})" style="background: rgba(0, 0, 0, 0.7); color: #ffffff; border: 1px solid rgba(255, 255, 255, 0.3); padding: 6px 10px; border-radius: 6px; cursor: pointer; font-size: 10px; font-weight: 500; transition: all 0.3s ease; height: 28px; display: flex; align-items: center; justify-content: center; backdrop-filter: blur(4px); text-shadow: 0 1px 2px rgba(0, 0, 0, 0.8); flex: 1;">
                                        üëÅ –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `).join('');
        }
        
        // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
        function filterAdminProducts() {
            const searchTerm = document.getElementById('adminSearchInput').value.toLowerCase();
            const filteredProducts = products.filter(product => 
                product.title.toLowerCase().includes(searchTerm)
            );
            renderAdminProducts(filteredProducts);
        }
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–∞–ª–µ—Ä–µ–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        function handleGalleryUpload(input) {
            console.log('üì∏ handleGalleryUpload –≤—ã–∑–≤–∞–Ω–∞');
            
            const files = Array.from(input.files);
            if (files.length === 0) {
                selectedGalleryImages = [];
                document.getElementById('galleryPreview').innerHTML = '';
                return;
            }
            
            selectedGalleryImages = [];
            const preview = document.getElementById('galleryPreview');
            preview.innerHTML = '';
            
            files.forEach((file, index) => {
                if (file.size > 5 * 1024 * 1024) {
                    console.log('‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π:', file.size, '–±–∞–π—Ç');
                    alert(`–§–∞–π–ª ${file.name} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π! –ú–∞–∫—Å–∏–º—É–º 5MB.`);
                    return;
                }
                
                const reader = new FileReader();
                reader.onload = function(e) {
                    selectedGalleryImages.push(e.target.result);
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.style.cssText = 'width: 80px; height: 80px; object-fit: cover; border-radius: 4px; border: 1px solid #333;';
                    preview.appendChild(img);
                };
                
                reader.readAsDataURL(file);
            });
        }
        
        // –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        function handleImageUpload(input) {
            console.log('üì∏ handleImageUpload –≤—ã–∑–≤–∞–Ω–∞');
            
            const file = input.files[0];
            if (file) {
                console.log('üì∏ –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª:', {
                    name: file.name,
                    size: file.size,
                    type: file.type,
                    lastModified: file.lastModified
                });
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 5MB)
                if (file.size > 5 * 1024 * 1024) {
                    console.log('‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π:', file.size, '–±–∞–π—Ç');
                    alert('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π! –ú–∞–∫—Å–∏–º—É–º 5MB.');
                    input.value = '';
                    return;
                }
                
                console.log('üì∏ –ù–∞—á–∏–Ω–∞–µ–º —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞...');
                const reader = new FileReader();
                
                reader.onload = function(e) {
                    selectedImageData = e.target.result;
                    console.log('üì∏ Base64 –≥–æ—Ç–æ–≤:', {
                        length: selectedImageData.length,
                        startsWith: selectedImageData.substring(0, 50) + '...',
                        type: selectedImageData.split(',')[0]
                    });
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é
                    const preview = document.getElementById('imagePreview');
                    preview.innerHTML = `<img src="${e.target.result}" alt="Preview" style="max-width: 100%; max-height: 120px; object-fit: cover; border-radius: 4px;">`;
                    console.log('üì∏ –ü—Ä–µ–≤—å—é –æ–±–Ω–æ–≤–ª–µ–Ω–æ');
                };
                
                reader.onerror = function(error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', error);
                    alert('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞!');
                };
                
                reader.onprogress = function(e) {
                    if (e.lengthComputable) {
                        const percentComplete = (e.loaded / e.total) * 100;
                        console.log('üì∏ –ü—Ä–æ–≥—Ä–µ—Å—Å —á—Ç–µ–Ω–∏—è:', percentComplete.toFixed(2) + '%');
                    }
                };
                
                reader.readAsDataURL(file);
            } else {
                console.log('üì∏ –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω, –æ—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ');
                selectedImageData = '';
                document.getElementById('imagePreview').innerHTML = '–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ';
            }
        }
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
        function addToCart(productId, size = null) {
            const product = products.find(p => p.id === productId);
            if (!product) return;
            
            const existingItem = cart.find(item => item.product_id === productId && item.size === size);
            if (existingItem) {
                existingItem.quantity += 1;
            } else {
                cart.push({
                    product_id: productId,
                    quantity: 1,
                    size: size,
                    product: product
                });
            }
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
            resetProductButtons(productId);
            
            updateCartUI();
            const sizeText = size ? ` (—Ä–∞–∑–º–µ—Ä ${size})` : '';
            tg.showAlert(`${product.title}${sizeText} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!`);
        }
        
        function selectSize(productId) {
            const product = products.find(p => p.id === productId);
            if (!product) return;
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ç–æ–≤–∞—Ä–∞
            let sizes = [];
            const title = product.title.toLowerCase();
            
            if (title.includes('–∫—Ä–æ—Å—Å–æ–≤–∫–∏') || title.includes('–∫—Ä–æ—Å—Å–æ–≤–∫–∏') || title.includes('sneakers') || 
                title.includes('nike') || title.includes('adidas') || title.includes('puma') || 
                title.includes('jordan') || title.includes('dunk') || title.includes('boost') || 
                title.includes('balance') || title.includes('–æ–±—É–≤—å') || title.includes('—Ç—É—Ñ–ª–∏')) {
                sizes = ['36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46'];
            } else if (title.includes('—Ñ—É—Ç–±–æ–ª–∫–∞') || title.includes('–º–∞–π–∫–∞') || title.includes('—Ä—É–±–∞—à–∫–∞') || 
                      title.includes('—Ç–æ–ø') || title.includes('–±–ª—É–∑–∫–∞')) {
                sizes = ['XS', 'S', 'M', 'L', 'XL', 'XXL'];
            } else if (title.includes('–¥–∂–∏–Ω—Å—ã') || title.includes('–±—Ä—é–∫–∏') || title.includes('—à—Ç–∞–Ω—ã') || 
                      title.includes('—à–æ—Ä—Ç—ã') || title.includes('—é–±–∫–∞')) {
                sizes = ['XS', 'S', 'M', 'L', 'XL', 'XXL'];
            } else if (title.includes('–∫—É—Ä—Ç–∫–∞') || title.includes('–ø–∞–ª—å—Ç–æ') || title.includes('–ø–∏–¥–∂–∞–∫') || 
                      title.includes('–∫–æ—Å—Ç—é–º') || title.includes('–ø–ª–∞—Ç—å–µ')) {
                sizes = ['XS', 'S', 'M', 'L', 'XL', 'XXL'];
            } else {
                // –î–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ —Ä–∞–∑–º–µ—Ä–∞ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É
                addToCart(productId);
                return;
            }
            
            showSizeModal(productId, sizes);
        }
        
        function showSizeModal(productId, sizes) {
            const product = products.find(p => p.id === productId);
            if (!product) return;
            
            const sizeButtons = sizes.map(size => 
                `<button class="size-btn" onclick="addToCartWithSize(${productId}, '${size}')">${size}</button>`
            ).join('');
            
            const modal = document.createElement('div');
            modal.className = 'modal';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <h3>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä</h3>
                        <span class="close" onclick="closeModal()">&times;</span>
                    </div>
                    <div class="modal-body">
                        <p><strong>${product.title}</strong></p>
                        <p>–¶–µ–Ω–∞: ${product.price.toLocaleString()} ‚ÇΩ</p>
                        <div class="size-grid">
                            ${sizeButtons}
                        </div>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
            modal.style.display = 'block';
        }
        
        function addToCartWithSize(productId, size) {
            closeModal();
            addToCart(productId, size);
        }
        
        function closeModal() {
            const modal = document.querySelector('.modal');
            if (modal) {
                modal.remove();
            }
        }
        
        // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —à—Ç–æ—Ä–∫–∏
        let currentProductId = null;
        let selectedSize = null;
        let currentProductSizes = [];
        
        function showSizeDrawer(productId) {
            const product = products.find(p => p.id === productId);
            if (!product) return;
            
            currentProductId = productId;
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ç–æ–≤–∞—Ä–∞
            let sizes = [];
            const title = product.title.toLowerCase();
            
            if (title.includes('–∫—Ä–æ—Å—Å–æ–≤–∫–∏') || title.includes('sneakers') || 
                title.includes('nike') || title.includes('adidas') || title.includes('puma') || 
                title.includes('jordan') || title.includes('dunk') || title.includes('boost') || 
                title.includes('balance') || title.includes('–æ–±—É–≤—å') || title.includes('—Ç—É—Ñ–ª–∏')) {
                sizes = ['36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46'];
            } else if (title.includes('—Ñ—É—Ç–±–æ–ª–∫–∞') || title.includes('–º–∞–π–∫–∞') || title.includes('—Ä—É–±–∞—à–∫–∞') || 
                      title.includes('—Ç–æ–ø') || title.includes('–±–ª—É–∑–∫–∞')) {
                sizes = ['XS', 'S', 'M', 'L', 'XL', 'XXL'];
            } else if (title.includes('–¥–∂–∏–Ω—Å—ã') || title.includes('–±—Ä—é–∫–∏') || title.includes('—à—Ç–∞–Ω—ã') || 
                      title.includes('—à–æ—Ä—Ç—ã') || title.includes('—é–±–∫–∞')) {
                sizes = ['XS', 'S', 'M', 'L', 'XL', 'XXL'];
            } else if (title.includes('–∫—É—Ä—Ç–∫–∞') || title.includes('–ø–∞–ª—å—Ç–æ') || title.includes('–ø–∏–¥–∂–∞–∫') || 
                      title.includes('–∫–æ—Å—Ç—é–º') || title.includes('–ø–ª–∞—Ç—å–µ')) {
                sizes = ['XS', 'S', 'M', 'L', 'XL', 'XXL'];
            }
            
            if (sizes.length === 0) {
                // –î–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ —Ä–∞–∑–º–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
                sizes = ['–ë–µ–∑ —Ä–∞–∑–º–µ—Ä–∞'];
            }
            
            currentProductSizes = sizes;
            selectedSize = null;
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
            document.getElementById('drawerProductTitle').textContent = product.title;
            document.getElementById('drawerProductPrice').textContent = `${product.price.toLocaleString()} ‚ÇΩ`;
            
            // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–∞–∑–º–µ—Ä–æ–≤
            const sizeGrid = document.getElementById('drawerSizeGrid');
            sizeGrid.innerHTML = sizes.map(size => `
                <button class="drawer-size-btn" onclick="selectSizeInDrawer('${size}')" data-size="${size}">
                    ${size}
                </button>
            `).join('');
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
            document.getElementById('addToCartDrawerBtn').disabled = true;
            document.getElementById('addToCartDrawerBtn').textContent = '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä';
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —à—Ç–æ—Ä–∫—É
            document.getElementById('sizeDrawer').classList.add('open');
        }
        
        function selectSizeInDrawer(size) {
            selectedSize = size;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ —à—Ç–æ—Ä–∫–µ
            document.querySelectorAll('.drawer-size-btn').forEach(btn => {
                btn.classList.remove('selected');
                if (btn.dataset.size === size) {
                    btn.classList.add('selected');
                }
            });
            
            // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —à—Ç–æ—Ä–∫–µ
            const addBtn = document.getElementById('addToCartDrawerBtn');
            addBtn.disabled = false;
            addBtn.textContent = `–î–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–º–µ—Ä ${size}`;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–æ–≤–∞—Ä–∞
            const sizeBtn = document.getElementById(`sizeBtn_${currentProductId}`);
            const cartBtn = document.getElementById(`cartBtn_${currentProductId}`);
            
            if (sizeBtn && cartBtn) {
                sizeBtn.style.display = 'none';
                cartBtn.style.display = 'flex';
                cartBtn.textContent = `–í –∫–æ—Ä–∑–∏–Ω—É (${size})`;
                sizeBtn.classList.remove('required');
            }
        }
        
        function addToCartFromDrawer() {
            if (!currentProductId || !selectedSize) return;
            
            addToCart(currentProductId, selectedSize);
            closeSizeDrawer();
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
            currentProductId = null;
            selectedSize = null;
            currentProductSizes = [];
        }
        
        function resetProductButtons(productId) {
            const sizeBtn = document.getElementById(`sizeBtn_${productId}`);
            const cartBtn = document.getElementById(`cartBtn_${productId}`);
            
            if (sizeBtn && cartBtn) {
                sizeBtn.style.display = 'flex';
                cartBtn.style.display = 'none';
                sizeBtn.textContent = '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É';
                cartBtn.textContent = '–í –∫–æ—Ä–∑–∏–Ω—É';
                sizeBtn.classList.add('required');
            }
        }
        
        function closeSizeDrawer() {
            document.getElementById('sizeDrawer').classList.remove('open');
            // –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ —Ä–∞–∑–º–µ—Ä —É–∂–µ –≤—ã–±—Ä–∞–Ω
            if (!selectedSize) {
                currentProductId = null;
                currentProductSizes = [];
            }
        }
        
        // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
        function removeFromCart(productId, size = null) {
            cart = cart.filter(item => !(item.product_id === productId && item.size === size));
            updateCartUI();
        }
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        function updateQuantity(productId, quantity, size = null) {
            if (quantity <= 0) {
                removeFromCart(productId, size);
                return;
            }
            
            const item = cart.find(item => item.product_id === productId && item.size === size);
            if (item) {
                item.quantity = quantity;
                updateCartUI();
            }
        }
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∫–æ—Ä–∑–∏–Ω—ã
        function updateCartUI() {
            const cartItems = document.getElementById('cartItems');
            const cartTotal = document.getElementById('cartTotal');
            const checkoutBtn = document.getElementById('checkoutBtn');
            const cartCount = document.getElementById('cartCount');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
            cartCount.textContent = totalItems;
            cartCount.style.display = totalItems > 0 ? 'block' : 'none';
            
            if (cart.length === 0) {
                cartItems.innerHTML = '<div style="text-align: center; color: #aaaaaa; padding: 20px;">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</div>';
                cartTotal.innerHTML = '–ò—Ç–æ–≥–æ: 0 ‚ÇΩ';
                checkoutBtn.classList.add('hidden');
                return;
            }
            
            cartItems.innerHTML = cart.map(item => `
                <div class="cart-item">
                    <div class="cart-item-info">
                        <div class="cart-item-title">${item.product.title}${item.size ? ` (—Ä–∞–∑–º–µ—Ä ${item.size})` : ''}</div>
                        <div class="cart-item-price">${item.product.price.toLocaleString()} ‚ÇΩ</div>
                    </div>
                    <div class="quantity-controls">
                        <button class="quantity-btn" onclick="updateQuantity(${item.product_id}, ${item.quantity - 1}, '${item.size || ''}')">-</button>
                        <input type="number" class="quantity-input" value="${item.quantity}" min="1" 
                               onchange="updateQuantity(${item.product_id}, parseInt(this.value), '${item.size || ''}')">
                        <button class="quantity-btn" onclick="updateQuantity(${item.product_id}, ${item.quantity + 1}, '${item.size || ''}')">+</button>
                        <button class="remove-btn" onclick="removeFromCart(${item.product_id}, '${item.size || ''}')">üóëÔ∏è</button>
                    </div>
                </div>
            `).join('');
            
            const total = cart.reduce((sum, item) => sum + (item.product.price * item.quantity), 0);
            cartTotal.innerHTML = `–ò—Ç–æ–≥–æ: ${total.toLocaleString()} ‚ÇΩ`;
            checkoutBtn.classList.remove('hidden');
        }
        
        // –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        function checkout() {
            if (cart.length === 0) return;
            
            const orderData = {
                type: 'order',
                order: {
                    customer_name: '–ü–æ–∫—É–ø–∞—Ç–µ–ª—å',
                    customer_phone: '+7 (999) 123-45-67',
                    items: cart
                }
            };
            
            tg.sendData(JSON.stringify(orderData));
            tg.showAlert('–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!');
            
            cart = [];
            updateCartUI();
        }
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        async function addProduct(event) {
            event.preventDefault();
            
            console.log('üöÄ –§—É–Ω–∫—Ü–∏—è addProduct –≤—ã–∑–≤–∞–Ω–∞');
            
            const title = document.getElementById('productTitle').value;
            const description = document.getElementById('productDescription').value;
            const price = parseInt(document.getElementById('productPrice').value);
            const category = document.getElementById('productCategory').value.trim();
            const brand = document.getElementById('productBrand').value.trim();
            const color = document.getElementById('productColor').value.trim();
            const material = document.getElementById('productMaterial').value.trim();
            const weight = document.getElementById('productWeight').value.trim();
            const dimensions = document.getElementById('productDimensions').value.trim();
            const sizes = document.getElementById('productSizes').value.trim();
            
            console.log('üìù –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', { 
                title: title, 
                description: description,
                price: price, 
                category: category,
                brand: brand,
                color: color,
                material: material,
                weight: weight,
                dimensions: dimensions,
                sizes: sizes,
                imageData: selectedImageData ? `–µ—Å—Ç—å (${selectedImageData.length} —Å–∏–º–≤–æ–ª–æ–≤)` : '–Ω–µ—Ç',
                galleryImages: selectedGalleryImages.length,
                currentEditingProduct: currentEditingProduct,
                isEditMode: !!currentEditingProduct
            });
            
            if (!title || !price || price <= 0) {
                console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã');
                showAdminMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!', 'error');
                return;
            }
            
            try {
                const url = currentEditingProduct ? 
                    `/api/update-product/${currentEditingProduct}` : 
                    '/api/add-product';
                
                console.log('üåê URL –∑–∞–ø—Ä–æ—Å–∞:', url);
                
                const requestData = {
                    title: title,
                    description: description,
                    price: price,
                    category: category,
                    brand: brand,
                    color: color,
                    material: material,
                    weight: weight,
                    dimensions: dimensions,
                    sizes: sizes,
                    image: selectedImageData,
                    gallery_images: selectedGalleryImages
                };
                
                console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:', {
                    title: title,
                    price: price,
                    imageLength: selectedImageData ? selectedImageData.length : 0,
                    fullRequestData: requestData
                });
                
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(requestData)
                });
                
                console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω, —Å—Ç–∞—Ç—É—Å:', response.status);
                
                const result = await response.json();
                
                console.log('üì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result);
                
                if (result.success) {
                    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ');
                    showAdminMessage(
                        currentEditingProduct ? '–¢–æ–≤–∞—Ä –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!' : '–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!', 
                        'success'
                    );
                    resetForm();
                    await loadProducts();
                } else {
                    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', result.message);
                    showAdminMessage(result.message || '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞', 'error');
                }
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ fetch:', error);
                showAdminMessage('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: ' + error.message, 'error');
            }
        }
        
        // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ–æ—Ä–º—É)
        function editProduct(productId) {
            alert('–ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ID: ' + productId);
            console.log('üîß –§—É–Ω–∫—Ü–∏—è editProduct –≤—ã–∑–≤–∞–Ω–∞ –¥–ª—è ID:', productId);
            
            const product = products.find(p => p.id === productId);
            if (!product) {
                alert('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!');
                console.error('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω:', productId);
                return;
            }
            
            console.log('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:', product);
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            currentEditingProduct = productId;
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
            document.getElementById('productTitle').value = product.title;
            document.getElementById('productDescription').value = product.description || '';
            document.getElementById('productPrice').value = product.price;
            document.getElementById('productCategory').value = product.category || '';
            document.getElementById('productBrand').value = product.brand || '';
            document.getElementById('productColor').value = product.color || '';
            document.getElementById('productMaterial').value = product.material || '';
            document.getElementById('productWeight').value = product.weight || '';
            document.getElementById('productDimensions').value = product.dimensions || '';
            document.getElementById('productSizes').value = product.sizes || '';
            
            // –û—á–∏—â–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            selectedImageData = '';
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            if (product.image_url) {
                const imageUrl = product.image_url.startsWith('http') ? product.image_url : `${window.location.origin}${product.image_url}`;
                document.getElementById('imagePreview').innerHTML = `<img src="${imageUrl}" alt="${product.title}" style="max-width: 100%; max-height: 120px; object-fit: cover; border-radius: 4px;">`;
            } else {
                document.getElementById('imagePreview').innerHTML = '–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ';
            }
            
            // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –Ω–∞ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"
            document.getElementById('submitBtn').textContent = 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è';
            
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –∞–¥–º–∏–Ω–∞
            showTab('admin');
            
            // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ñ–æ—Ä–º–µ
            setTimeout(() => {
                document.getElementById('adminForm').scrollIntoView({ behavior: 'smooth' });
            }, 100);
        }
        
        // –ü–†–û–°–¢–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò
        function simpleEditProduct(productId) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            editProduct(productId);
        }
        
        async function simpleDeleteProduct(productId) {
            if (!confirm('–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä ID: ' + productId + '?')) {
                return;
            }
            
            try {
                const response = await fetch('/api/delete-product/' + productId, {
                    method: 'POST'
                });
                
                const result = await response.json();
                
                if (result.success) {
                    alert('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
                    loadProducts(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
                } else {
                    alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + result.message);
                }
            } catch (error) {
                alert('–û—à–∏–±–∫–∞: ' + error.message);
                console.error('Error:', error);
            }
        }
        
        // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        async function deleteProduct(productId) {
            alert('–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ ID: ' + productId);
            console.log('üóëÔ∏è –§—É–Ω–∫—Ü–∏—è deleteProduct –≤—ã–∑–≤–∞–Ω–∞ –¥–ª—è ID:', productId);
            
            if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?')) {
                console.log('‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
                return;
            }
            
            try {
                const response = await fetch(`/api/delete-product/${productId}`, {
                    method: 'POST'
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showAdminMessage('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!', 'success');
                    await loadProducts();
                } else {
                    showAdminMessage('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞', 'error');
                }
            } catch (error) {
                console.error('Error deleting product:', error);
                showAdminMessage('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞', 'error');
            }
        }
        
        // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
        function resetForm() {
            currentEditingProduct = null;
            selectedImageData = '';
            selectedGalleryImages = [];
            document.getElementById('adminForm').reset();
            document.getElementById('imagePreview').innerHTML = '–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ';
            document.getElementById('galleryPreview').innerHTML = '';
            document.getElementById('submitBtn').textContent = '‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä';
        }
        
        // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        function showAdminMessage(message, type) {
            const messageDiv = document.getElementById('adminMessage');
            messageDiv.innerHTML = `<div class="${type}-message">${message}</div>`;
            
            setTimeout(() => {
                messageDiv.innerHTML = '';
            }, 3000);
        }
        
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–±–æ–≤
        function showTab(tabName) {
            // –°–∫—Ä—ã—Ç—å –≤—Å–µ —Ç–∞–±—ã
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.remove('active');
            });
            
            document.querySelectorAll('.nav-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞–±
            document.getElementById(tabName).classList.add('active');
            event.target.classList.add('active');
            
            // –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ç–∞–±–æ–≤
            if (tabName === 'cart') {
                updateCartUI();
            } else if (tabName === 'admin') {
                renderAdminProducts();
            }
        }
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        document.getElementById('checkoutBtn').addEventListener('click', checkout);
        document.getElementById('adminForm').addEventListener('submit', addProduct);
        
        // –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
        function openProductPage(productId) {
            window.location.href = `/product/${productId}`;
        }
        
        // –ó–∞–ø—É—Å–∫
        loadProducts();
    </script>
    
    <!-- –®—Ç–æ—Ä–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ -->
    <div id="sizeDrawer" class="size-drawer">
        <div class="drawer-header">
            <h3>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä</h3>
            <span class="drawer-close" onclick="closeSizeDrawer()">&times;</span>
        </div>
        <div class="drawer-content">
            <div class="drawer-product-info">
                <h4 id="drawerProductTitle"></h4>
                <p id="drawerProductPrice"></p>
            </div>
            <div id="drawerSizeGrid" class="drawer-size-grid">
                <!-- –†–∞–∑–º–µ—Ä—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
            </div>
            <div class="drawer-actions">
                <button class="drawer-btn drawer-btn-cancel" onclick="closeSizeDrawer()">–û—Ç–º–µ–Ω–∞</button>
                <button class="drawer-btn drawer-btn-add" id="addToCartDrawerBtn" onclick="addToCartFromDrawer()" disabled>–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</button>
            </div>
        </div>
    </div>
    </body>
</html>'''

    def get_product_page(self, product_id):
        """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–æ–≤–∞—Ä–∞ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏ –≥–∞–ª–µ—Ä–µ–µ–π"""
        return f'''<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–¢–æ–≤–∞—Ä - LOOK & GO</title>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
        * {{ 
            margin: 0; 
            padding: 0; 
            box-sizing: border-box; 
        }}
        
        body {{
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #1a1a1a;
            color: #ffffff;
            padding: 16px;
            min-height: 100vh;
            padding-bottom: 100px;
        }}
        
        .header {{
            text-align: center;
            margin-bottom: 24px;
            padding: 20px;
            background: #2d2d2d;
            border-radius: 12px;
            border: 1px solid #333;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }}
        
        .back-btn {{
            background: #1e40af;
            color: white;
            border: none;
            padding: 10px 16px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
        }}
        
        .back-btn:hover {{
            background: #1d4ed8;
        }}
        
        .header h1 {{
            font-size: 20px;
            margin: 0;
            color: #ffffff;
        }}
        
        .product-container {{
            max-width: 600px;
            margin: 0 auto;
        }}
        
        .product-gallery {{
            margin-bottom: 24px;
        }}
        
        .main-image {{
            width: 100%;
            height: 300px;
            background: #2d2d2d;
            border-radius: 12px;
            overflow: hidden;
            margin-bottom: 16px;
            position: relative;
        }}
        
        .main-image img {{
            width: 100%;
            height: 100%;
            object-fit: cover;
        }}
        
        .thumbnail-gallery {{
            display: flex;
            gap: 12px;
            overflow-x: auto;
            padding: 8px 0;
        }}
        
        .thumbnail {{
            min-width: 80px;
            height: 80px;
            background: #2d2d2d;
            border-radius: 8px;
            overflow: hidden;
            cursor: pointer;
            border: 2px solid transparent;
            transition: all 0.3s ease;
        }}
        
        .thumbnail.active {{
            border-color: #1e40af;
        }}
        
        .thumbnail img {{
            width: 100%;
            height: 100%;
            object-fit: cover;
        }}
        
        .product-info {{
            background: #2d2d2d;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 24px;
            border: 1px solid #333;
        }}
        
        .product-title {{
            font-size: 24px;
            font-weight: 700;
            margin-bottom: 8px;
            color: #ffffff;
        }}
        
        .product-price {{
            font-size: 28px;
            font-weight: 700;
            color: #10b981;
            margin-bottom: 16px;
        }}
        
        .product-description {{
            color: #cccccc;
            line-height: 1.6;
            margin-bottom: 20px;
        }}
        
        .product-details {{
            display: grid;
            gap: 12px;
        }}
        
        .detail-row {{
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px solid #333;
        }}
        
        .detail-row:last-child {{
            border-bottom: none;
        }}
        
        .detail-label {{
            color: #aaaaaa;
            font-weight: 500;
        }}
        
        .detail-value {{
            color: #ffffff;
            font-weight: 600;
        }}
        
        .size-section {{
            background: #2d2d2d;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 24px;
            border: 1px solid #333;
        }}
        
        .size-section h3 {{
            color: #3b82f6;
            margin-bottom: 16px;
            font-size: 18px;
        }}
        
        .size-grid {{
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));
            gap: 8px;
        }}
        
        .size-btn {{
            background: #1a1a1a;
            border: 2px solid #333;
            border-radius: 8px;
            color: #ffffff;
            padding: 12px 8px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            min-height: 44px;
            display: flex;
            align-items: center;
            justify-content: center;
        }}
        
        .size-btn:hover {{
            background: #3d3d3d;
            border-color: #007bff;
        }}
        
        .size-btn.selected {{
            background: #007bff;
            border-color: #007bff;
        }}
        
        .size-btn.out-of-stock {{
            background: #333;
            border-color: #555;
            color: #888;
            cursor: not-allowed;
        }}
        
        .add-to-cart-section {{
            background: #2d2d2d;
            border-radius: 12px;
            padding: 20px;
            border: 1px solid #333;
            position: sticky;
            bottom: 16px;
        }}
        
        .add-to-cart-btn {{
            background: #1e40af;
            color: white;
            border: none;
            padding: 16px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            width: 100%;
            transition: all 0.3s ease;
        }}
        
        .add-to-cart-btn:hover:not(:disabled) {{
            background: #1d4ed8;
            transform: scale(1.02);
        }}
        
        .add-to-cart-btn:disabled {{
            background: #333;
            color: #888;
            cursor: not-allowed;
        }}
        
        .loading {{
            text-align: center;
            padding: 40px;
            color: #aaaaaa;
            font-size: 16px;
        }}
        
        .error {{
            text-align: center;
            padding: 40px;
            color: #dc2626;
            font-size: 16px;
        }}
        
        @media (max-width: 480px) {{
            .main-image {{
                height: 250px;
            }}
            
            .thumbnail {{
                min-width: 60px;
                height: 60px;
            }}
            
            .product-title {{
                font-size: 20px;
            }}
            
            .product-price {{
                font-size: 24px;
            }}
            
            .size-grid {{
                grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));
            }}
        }}
    </style>
</head>
<body>
    <div class="header">
        <button class="back-btn" onclick="goBack()">‚Üê –ù–∞–∑–∞–¥</button>
        <h1>–¢–æ–≤–∞—Ä</h1>
        <div></div>
    </div>
    
    <div class="product-container">
        <div id="productContent" class="loading">
            –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–∞...
        </div>
    </div>

    <script>
        const tg = window.Telegram.WebApp;
        tg.ready();
        tg.expand();
        
        let currentProduct = null;
        let selectedSize = null;
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞
        async function loadProduct() {{
            const productId = window.location.pathname.split('/').pop();
            
            try {{
                const response = await fetch(`/api/product/${{productId}}`);
                
                if (!response.ok) {{
                    throw new Error('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }}
                
                currentProduct = await response.json();
                renderProduct();
            }} catch (error) {{
                document.getElementById('productContent').innerHTML = `
                    <div class="error">
                        –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–∞: ${{error.message}}
                    </div>
                `;
            }}
        }}
        
        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        function renderProduct() {{
            if (!currentProduct) return;
            
            const galleryImages = currentProduct.gallery_images || [];
            const mainImage = currentProduct.image_url || (galleryImages.length > 0 ? galleryImages[0] : '');
            
            document.getElementById('productContent').innerHTML = `
                <div class="product-gallery">
                    <div class="main-image" id="mainImage">
                        ${{mainImage ? 
                            `<img src="${{window.location.origin}}${{mainImage}}" alt="${{currentProduct.title}}" id="mainImageImg">` : 
                            '<div style="color: #666; font-size: 48px; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center;">üì∑</div>'
                        }}
                    </div>
                    ${{galleryImages.length > 1 ? `
                        <div class="thumbnail-gallery">
                            ${{galleryImages.map((img, index) => `
                                <div class="thumbnail ${{index === 0 ? 'active' : ''}}" onclick="changeMainImage('${{img}}', this)">
                                    <img src="${{window.location.origin}}${{img}}" alt="–§–æ—Ç–æ ${{index + 1}}">
                                </div>
                            `).join('')}}
                        </div>
                    ` : ''}}
                </div>
                
                <div class="product-info">
                    <h1 class="product-title">${{currentProduct.title}}</h1>
                    <div class="product-price">${{currentProduct.price.toLocaleString()}} ‚ÇΩ</div>
                    
                    ${{currentProduct.description ? `
                        <div class="product-description">
                            ${{currentProduct.description}}
                        </div>
                    ` : ''}}
                    
                    <div class="product-details">
                        ${{currentProduct.brand ? `
                            <div class="detail-row">
                                <span class="detail-label">–ë—Ä–µ–Ω–¥:</span>
                                <span class="detail-value">${{currentProduct.brand}}</span>
                            </div>
                        ` : ''}}
                        
                        ${{currentProduct.category ? `
                            <div class="detail-row">
                                <span class="detail-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                                <span class="detail-value">${{currentProduct.category}}</span>
                            </div>
                        ` : ''}}
                        
                        ${{currentProduct.color ? `
                            <div class="detail-row">
                                <span class="detail-label">–¶–≤–µ—Ç:</span>
                                <span class="detail-value">${{currentProduct.color}}</span>
                            </div>
                        ` : ''}}
                        
                        ${{currentProduct.material ? `
                            <div class="detail-row">
                                <span class="detail-label">–ú–∞—Ç–µ—Ä–∏–∞–ª:</span>
                                <span class="detail-value">${{currentProduct.material}}</span>
                            </div>
                        ` : ''}}
                        
                        ${{currentProduct.weight ? `
                            <div class="detail-row">
                                <span class="detail-label">–í–µ—Å:</span>
                                <span class="detail-value">${{currentProduct.weight}}</span>
                            </div>
                        ` : ''}}
                        
                        
                        <div class="detail-row">
                            <span class="detail-label">–ù–∞–ª–∏—á–∏–µ:</span>
                            <span class="detail-value" style="color: ${{currentProduct.in_stock ? '#10b981' : '#dc2626'}}">
                                ${{currentProduct.in_stock ? '–í –Ω–∞–ª–∏—á–∏–∏' : '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'}}
                            </span>
                        </div>
                    </div>
                </div>
                
                ${{currentProduct.sizes ? `
                    <div class="size-section">
                        <h3>–†–∞–∑–º–µ—Ä—ã</h3>
                        <div class="size-grid" id="sizeGrid">
                            ${{currentProduct.sizes.split(',').map(size => `
                                <button class="size-btn" onclick="selectSize('${{size.trim()}}', this)">
                                    ${{size.trim()}}
                                </button>
                            `).join('')}}
                        </div>
                    </div>
                ` : ''}}
                
                <div class="add-to-cart-section">
                    <button class="add-to-cart-btn" id="addToCartBtn" onclick="addToCart()" ${{!currentProduct.in_stock ? 'disabled' : ''}}>
                        ${{!currentProduct.in_stock ? '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏' : '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É'}}
                    </button>
                </div>
            `;
        }}
        
        // –°–º–µ–Ω–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        function changeMainImage(imageUrl, thumbnail) {{
            const mainImageImg = document.getElementById('mainImageImg');
            if (mainImageImg) {{
                mainImageImg.src = window.location.origin + imageUrl;
            }}
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π thumbnail
            document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
            thumbnail.classList.add('active');
        }}
        
        // –í—ã–±–æ—Ä —Ä–∞–∑–º–µ—Ä–∞
        function selectSize(size, button) {{
            selectedSize = size;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            document.querySelectorAll('.size-btn').forEach(btn => {{
                btn.classList.remove('selected');
            }});
            button.classList.add('selected');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
            updateAddToCartButton();
        }}
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
        function updateAddToCartButton() {{
            const btn = document.getElementById('addToCartBtn');
            if (!btn) return;
            
            if (currentProduct.sizes && !selectedSize) {{
                btn.textContent = '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä';
                btn.disabled = true;
            }} else {{
                btn.textContent = selectedSize ? `–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É (—Ä–∞–∑–º–µ—Ä ${{selectedSize}})` : '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É';
                btn.disabled = false;
            }}
        }}
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
        function addToCart() {{
            if (!currentProduct || !currentProduct.in_stock) return;
            
            if (currentProduct.sizes && !selectedSize) {{
                tg.showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä');
                return;
            }}
            
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
            // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            const sizeText = selectedSize ? ` (—Ä–∞–∑–º–µ—Ä ${{selectedSize}})` : '';
            tg.showAlert(`${{currentProduct.title}}${{sizeText}} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!`);
        }}
        
        // –í–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥
        function goBack() {{
            if (window.history.length > 1) {{
                window.history.back();
            }} else {{
                window.location.href = '/';
            }}
        }}
        
        // –ó–∞–ø—É—Å–∫
        loadProduct();
    </script>
</body>
</html>'''

def start_web_server():
    """–ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        server = HTTPServer(('0.0.0.0', PORT), DarkWebAppHandler)
        print(f"üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://0.0.0.0:{PORT}")
        server.serve_forever()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üõçÔ∏è –ó–ê–ü–£–°–ö –û–°–ù–û–í–ù–û–ì–û TELEGRAM BOT")
    print("=" * 40)
    
    bot = DarkShopBot()
    
    if not bot.token:
        print("‚ö†Ô∏è BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω - –±–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN")
    else:
        print(f"ü§ñ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        print(f"üì± –¢–æ–∫–µ–Ω: {bot.token[:10]}...")
        print(f"üåê WebApp URL: {bot.webapp_url}")
    
    print("=" * 40)
    print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
    start_web_server()

if __name__ == "__main__":
    main()
