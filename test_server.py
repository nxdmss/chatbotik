#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

from fastapi import FastAPI, UploadFile, File, HTTPException, Form
from fastapi.responses import JSONResponse, FileResponse
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware
import os
import json
from pathlib import Path
from datetime import datetime
import uvicorn

app = FastAPI(title="Test Shop API")

# CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–µ–π
WEBAPP_DIR = os.path.join(os.path.dirname(__file__), 'webapp')
UPLOADS_DIR = os.path.join(WEBAPP_DIR, 'uploads')
Path(UPLOADS_DIR).mkdir(parents=True, exist_ok=True)

# –ú–æ–Ω—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.mount('/webapp/static', StaticFiles(directory=WEBAPP_DIR), name='webapp_static')

# –ü—Ä–æ—Å—Ç—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
test_products = [
    {
        "id": 1,
        "title": "–¢–µ—Å—Ç–æ–≤—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏",
        "description": "–ö—Ä–æ—Å—Å–æ–≤–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        "price": 5000,
        "sizes": ["40", "41", "42"],
        "photo": "/webapp/static/uploads/default.jpg",
        "is_active": True
    },
    {
        "id": 2,
        "title": "–¢–µ—Å—Ç–æ–≤—ã–µ –∫–µ–¥—ã",
        "description": "–ö–µ–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        "price": 3000,
        "sizes": ["38", "39", "40"],
        "photo": "/webapp/static/uploads/default.jpg",
        "is_active": True
    }
]

@app.get("/")
async def root():
    return {"message": "Test Shop API is running!"}

@app.get("/webapp/products.json")
async def get_products():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤"""
    print("üì¶ –ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤")
    return test_products

@app.get("/webapp/admin/products")
async def get_admin_products(user_id: str = None):
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    print(f"üëë –ó–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω-—Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è user_id: {user_id}")
    return {"products": test_products}

@app.post("/webapp/admin/products")
async def create_product(
    title: str = Form(...),
    description: str = Form(...),
    price: float = Form(...),
    sizes: str = Form(""),
    photo: UploadFile = File(None),
    user_id: str = Form(None)
):
    """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä"""
    print(f"‚ûï –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {title}")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
    sizes_list = [s.strip() for s in sizes.split(',') if s.strip()] if sizes else []
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
    new_product = {
        "id": len(test_products) + 1,
        "title": title,
        "description": description,
        "price": price,
        "sizes": sizes_list,
        "photo": "/webapp/static/uploads/default.jpg",
        "is_active": True
    }
    
    test_products.append(new_product)
    
    print(f"‚úÖ –¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω: {new_product}")
    return {
        "success": True,
        "product_id": new_product["id"],
        "message": "–¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
    }

@app.put("/webapp/admin/products/{product_id}")
async def update_product(
    product_id: int,
    title: str = Form(...),
    description: str = Form(...),
    price: float = Form(...),
    sizes: str = Form(""),
    photo: UploadFile = File(None),
    user_id: str = Form(None)
):
    """–û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–≤–∞—Ä"""
    print(f"‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ {product_id}: {title}")
    
    # –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä
    product = next((p for p in test_products if p["id"] == product_id), None)
    if not product:
        raise HTTPException(status_code=404, detail="–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
    sizes_list = [s.strip() for s in sizes.split(',') if s.strip()] if sizes else []
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä
    product.update({
        "title": title,
        "description": description,
        "price": price,
        "sizes": sizes_list
    })
    
    print(f"‚úÖ –¢–æ–≤–∞—Ä –æ–±–Ω–æ–≤–ª–µ–Ω: {product}")
    return {"success": True, "message": "–¢–æ–≤–∞—Ä –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"}

@app.delete("/webapp/admin/products/{product_id}")
async def delete_product(product_id: int, user_id: str = None):
    """–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä"""
    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ {product_id}")
    
    # –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä
    product = next((p for p in test_products if p["id"] == product_id), None)
    if not product:
        raise HTTPException(status_code=404, detail="–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä
    product["is_active"] = False
    
    print(f"‚úÖ –¢–æ–≤–∞—Ä –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: {product}")
    return {"success": True, "message": "–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"}

@app.get("/webapp/static/uploads/default.jpg")
async def get_default_image():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    return FileResponse("webapp/static/uploads/default.jpg", media_type="image/jpeg")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...")
    print("üì± –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8000/test_webapp.html –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    uvicorn.run(app, host="0.0.0.0", port=8000, log_level="info")
