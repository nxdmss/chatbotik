#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WebApp
"""

import http.server
import socketserver
import os
import json
from urllib.parse import urlparse, parse_qs

class WebAppHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        if self.path.startswith('/webapp/'):
            # –û–±—Å–ª—É–∂–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã WebApp
            file_path = self.path[8:]  # —É–±–∏—Ä–∞–µ–º /webapp/
            if file_path == '' or file_path == '/':
                file_path = 'index.html'
            
            full_path = os.path.join('webapp', file_path)
            if os.path.exists(full_path):
                self.send_response(200)
                if file_path.endswith('.html'):
                    self.send_header('Content-type', 'text/html; charset=utf-8')
                elif file_path.endswith('.css'):
                    self.send_header('Content-type', 'text/css')
                elif file_path.endswith('.js'):
                    self.send_header('Content-type', 'application/javascript')
                elif file_path.endswith('.json'):
                    self.send_header('Content-type', 'application/json')
                else:
                    self.send_header('Content-type', 'text/plain')
                self.end_headers()
                
                with open(full_path, 'rb') as f:
                    self.wfile.write(f.read())
            else:
                self.send_error(404, "File not found")
        elif self.path == '/api/products':
            # API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.end_headers()
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ —Ñ–∞–π–ª–∞
            try:
                with open('shop/products.json', 'r', encoding='utf-8') as f:
                    products = json.load(f)
                self.wfile.write(json.dumps(products, ensure_ascii=False).encode('utf-8'))
            except:
                self.wfile.write(json.dumps([], ensure_ascii=False).encode('utf-8'))
        elif self.path == '/':
            # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –¥–µ–º–æ
            self.send_response(200)
            self.send_header('Content-type', 'text/html; charset=utf-8')
            self.end_headers()
            
            with open('demo.html', 'rb') as f:
                self.wfile.write(f.read())
        else:
            super().do_GET()

def run_server(port=8000):
    """–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞"""
    os.chdir(os.path.dirname(os.path.abspath(__file__)))
    
    with socketserver.TCPServer(("", port), WebAppHandler) as httpd:
        print(f"üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:{port}")
        print(f"üì± WebApp –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:{port}/webapp/")
        print(f"üß™ –î–µ–º–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:{port}/")
        print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        
        try:
            httpd.serve_forever()
        except KeyboardInterrupt:
            print("\nüëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    run_server()
