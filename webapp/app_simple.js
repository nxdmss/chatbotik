// ======================
// üîπ –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤
// ======================

// –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
if ('caches' in window) {
    caches.keys().then(function(names) {
        for (let name of names) {
            caches.delete(name);
        }
    });
}

localStorage.clear();
sessionStorage.clear();

console.log('üöÄ –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ SIMPLE - –¢–û–õ–¨–ö–û –í–ê–® ID –ê–î–ú–ò–ù');

class SimpleShopApp {
    constructor() {
        this.isAdmin = false;
        this.products = [];
        this.init();
    }

    async init() {
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
        
        // –°–¢–†–û–ì–ê–Ø –ü–†–û–í–ï–†–ö–ê –ê–î–ú–ò–ù–°–ö–ò–• –ü–†–ê–í
        await this.checkAdminRights();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã
        await this.loadProducts();
        
        // –†–µ–Ω–¥–µ—Ä–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        this.render();
        
        console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
    }

    async checkAdminRights() {
        console.log('üîç –ü–†–û–í–ï–†–Ø–ï–ú –ê–î–ú–ò–ù–°–ö–ò–ï –ü–†–ê–í–ê...');
        
        const ADMIN_ID = '1593426947';
        let userId = null;
        
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram WebApp
            if (window.Telegram && window.Telegram.WebApp) {
                console.log('‚úÖ Telegram WebApp –Ω–∞–π–¥–µ–Ω');
                
                // –ü–æ–ª—É—á–∞–µ–º user_id
                if (window.Telegram.WebApp.initDataUnsafe && 
                    window.Telegram.WebApp.initDataUnsafe.user && 
                    window.Telegram.WebApp.initDataUnsafe.user.id) {
                    
                    userId = window.Telegram.WebApp.initDataUnsafe.user.id.toString();
                    console.log('üì± User ID –∏–∑ Telegram:', userId);
                    
                    // –°–¢–†–û–ì–û–ï –°–†–ê–í–ù–ï–ù–ò–ï
                    if (userId === ADMIN_ID) {
                        this.isAdmin = true;
                        console.log('üëë –í–´ –ê–î–ú–ò–ù! ID —Å–æ–≤–ø–∞–¥–∞–µ—Ç:', userId);
                    } else {
                        this.isAdmin = false;
                        console.log('üë§ –í–´ –ö–õ–ò–ï–ù–¢! ID:', userId);
                    }
                } else {
                    console.log('‚ùå User ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Telegram WebApp');
                    this.isAdmin = false;
                }
            } else {
                console.log('üåê –ó–∞–ø—É—â–µ–Ω–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ - –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ä–µ–∂–∏–º');
                this.isAdmin = true;
                userId = 'browser_debug';
                console.log('üîß –ê–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏');
            }
            
            console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢:');
            console.log('   User ID:', userId);
            console.log('   –ê–¥–º–∏–Ω:', this.isAdmin ? '–î–ê' : '–ù–ï–¢');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤:', error);
            this.isAdmin = false;
        }
    }

    async loadProducts() {
        try {
            const response = await fetch('/webapp/products.json');
            if (response.ok) {
                this.products = await response.json();
                console.log('üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:', this.products.length);
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
            this.products = [];
        }
    }

    render() {
        const container = document.getElementById('app-container');
        if (!container) return;

        let html = `
            <div class="container">
                <header class="header">
                    <h1>üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤</h1>
        `;

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞–¥–º–∏–Ω
        if (this.isAdmin) {
            html += `
                <div class="admin-panel" style="background: #ff6b6b; color: white; padding: 10px; margin: 10px 0; border-radius: 5px;">
                    <h3>üëë –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨</h3>
                    <button onclick="app.addProduct()" class="btn btn-primary">‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</button>
                    <button onclick="app.manageProducts()" class="btn btn-secondary">üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</button>
                </div>
            `;
        }

        html += `
                </header>
                
                <div class="products-grid">
        `;

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã
        this.products.forEach(product => {
            html += `
                <div class="product-card">
                    <img src="${product.photo || '/webapp/static/uploads/default.jpg'}" alt="${product.title}" onerror="this.src='/webapp/static/uploads/default.jpg'">
                    <h3>${product.title}</h3>
                    <p>${product.description}</p>
                    <div class="price">${product.price} ‚ÇΩ</div>
                    <div class="sizes">–†–∞–∑–º–µ—Ä—ã: ${product.sizes.join(', ')}</div>
                    
                    ${this.isAdmin ? `
                        <div class="admin-actions">
                            <button onclick="app.editProduct(${product.id})" class="btn btn-small">‚úèÔ∏è</button>
                            <button onclick="app.deleteProduct(${product.id})" class="btn btn-small btn-danger">üóëÔ∏è</button>
                        </div>
                    ` : ''}
                </div>
            `;
        });

        html += `
                </div>
            </div>
        `;

        container.innerHTML = html;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
        const status = this.isAdmin ? 'üëë –ê–î–ú–ò–ù' : 'üë§ –ö–õ–ò–ï–ù–¢';
        console.log('üéØ –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', status);
    }

    addProduct() {
        if (!this.isAdmin) {
            alert('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
            return;
        }
        alert('‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ (—Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)');
    }

    editProduct(id) {
        if (!this.isAdmin) {
            alert('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
            return;
        }
        alert(`‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ${id} (—Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)`);
    }

    deleteProduct(id) {
        if (!this.isAdmin) {
            alert('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
            return;
        }
        alert(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ${id} (—Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)`);
    }

    manageProducts() {
        if (!this.isAdmin) {
            alert('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
            return;
        }
        alert('üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ (—Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)');
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
const app = new SimpleShopApp();
