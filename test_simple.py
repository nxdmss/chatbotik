#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
"""

print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
try:
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    import os
    import json
    from datetime import datetime
    print("   ‚úÖ –ë–∞–∑–æ–≤—ã–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –±–∞–∑–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π: {e}")

# –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
try:
    print("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤...")
    required_files = [
        "bot.py",
        "server.py", 
        "run.py",
        "models.py",
        "database.py",
        "logger_config.py",
        "error_handlers.py",
        "webapp/index.html",
        "webapp/app.js",
        "webapp/styles.css",
        "webapp/admins.json"
    ]
    
    missing_files = []
    for file_path in required_files:
        if not os.path.exists(file_path):
            missing_files.append(file_path)
    
    if missing_files:
        print(f"   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {missing_files}")
    else:
        print("   ‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã")
        
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–æ–≤: {e}")

# –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ .env
try:
    print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env...")
    if os.path.exists('.env'):
        print("   ‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω")
        with open('.env', 'r') as f:
            content = f.read()
            if 'BOT_TOKEN' in content and 'WEBAPP_URL' in content:
                print("   ‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ BOT_TOKEN –∏ WEBAPP_URL –Ω–∞–π–¥–µ–Ω—ã")
            else:
                print("   ‚ö†Ô∏è  –ù–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env")
    else:
        print("   ‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ .env: {e}")

# –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ webapp/admins.json
try:
    print("4. –ü—Ä–æ–≤–µ—Ä–∫–∞ admins.json...")
    with open('webapp/admins.json', 'r') as f:
        admins_data = json.load(f)
        if 'admins' in admins_data and len(admins_data['admins']) > 0:
            print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(admins_data['admins'])} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
        else:
            print("   ‚ö†Ô∏è  –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø—É—Å—Ç")
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ admins.json: {e}")

# –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python —Ñ–∞–π–ª–æ–≤
try:
    print("5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞...")
    import py_compile
    
    python_files = ["bot.py", "server.py", "run.py", "models.py", "database.py", "logger_config.py", "error_handlers.py"]
    
    for file_path in python_files:
        try:
            py_compile.compile(file_path, doraise=True)
            print(f"   ‚úÖ {file_path} - —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        except py_compile.PyCompileError as e:
            print(f"   ‚ùå {file_path} - –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: {e}")
            
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: {e}")

print("\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢:")
print("–ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É –≤ Replit!")
print("–õ–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π Python –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ —Ä–∞–±–æ—Ç—É –≤ Replit.")
