#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£–õ–¨–¢–†–ê –ü–†–û–°–¢–û–ô –°–ï–†–í–ï–†
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π
"""

import json
import socket
from urllib.parse import urlparse, parse_qs

# –ü–æ—Ä—Ç
PORT = 8000

# –ü—Ä–æ—Å—Ç–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Ç–æ–≤–∞—Ä–æ–≤ (–≤ –ø–∞–º—è—Ç–∏)
products = [
    {"id": 1, "title": "–§—É—Ç–±–æ–ª–∫–∞", "price": 1500, "description": "–ö—Ä—É—Ç–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞", "active": True},
    {"id": 2, "title": "–î–∂–∏–Ω—Å—ã", "price": 3000, "description": "–°—Ç–∏–ª—å–Ω—ã–µ –¥–∂–∏–Ω—Å—ã", "active": True},
    {"id": 3, "title": "–ö—Ä–æ—Å—Å–æ–≤–∫–∏", "price": 5000, "description": "–£–¥–æ–±–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏", "active": True}
]

def handle_request(client_socket):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞"""
    request = client_socket.recv(1024).decode('utf-8')
    
    if not request:
        return
    
    # –ü–∞—Ä—Å–∏–º –∑–∞–ø—Ä–æ—Å
    lines = request.split('\n')
    first_line = lines[0]
    method, path, protocol = first_line.split()
    
    print(f"üì• {method} {path}")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—Ç–≤–µ—Ç–∞
    if path == '/api/products':
        # API —Ç–æ–≤–∞—Ä–æ–≤
        response_body = json.dumps(products, ensure_ascii=False)
        response = f"""HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8
Content-Length: {len(response_body.encode('utf-8'))}
Access-Control-Allow-Origin: *
Access-Control-Allow-Methods: GET, POST, OPTIONS
Access-Control-Allow-Headers: Content-Type

{response_body}"""
    
    elif path == '/admin':
        # –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
        try:
            with open('simple_admin.html', 'r', encoding='utf-8') as f:
                html_content = f.read()
        except FileNotFoundError:
            html_content = "<h1>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>"
        
        response = f"""HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
Content-Length: {len(html_content.encode('utf-8'))}

{html_content}"""
    
    elif path == '/' or path == '/index.html':
        # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        try:
            with open('simple_index.html', 'r', encoding='utf-8') as f:
                html_content = f.read()
        except FileNotFoundError:
            html_content = "<h1>–ú–∞–≥–∞–∑–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>"
        
        response = f"""HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
Content-Length: {len(html_content.encode('utf-8'))}

{html_content}"""
    
    else:
        # 404
        response_body = "<h1>404 - Not Found</h1>"
        response = f"""HTTP/1.1 404 Not Found
Content-Type: text/html; charset=utf-8
Content-Length: {len(response_body.encode('utf-8'))}

{response_body}"""
    
    client_socket.send(response.encode('utf-8'))
    client_socket.close()

def start_server():
    """–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞"""
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    server_socket.bind(('', PORT))
    server_socket.listen(5)
    
    print(f"üåê –£–ª—å—Ç—Ä–∞ –ø—Ä–æ—Å—Ç–æ–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:{PORT}")
    print(f"üì± –ú–∞–≥–∞–∑–∏–Ω: http://localhost:{PORT}")
    print(f"‚öôÔ∏è –ê–¥–º–∏–Ω: http://localhost:{PORT}/admin")
    print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+C")
    
    try:
        while True:
            client_socket, addr = server_socket.accept()
            handle_request(client_socket)
    except KeyboardInterrupt:
        print("\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        server_socket.close()

if __name__ == "__main__":
    start_server()